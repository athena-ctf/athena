//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.1

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Copy, Serialize, Deserialize, utoipa::ToSchema)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "challenge_kind_enum")]
#[serde(rename_all = "snake_case")]
pub enum ChallengeKindEnum {
    #[sea_orm(string_value = "dynamic_containerized")]
    DynamicContainerized,
    #[sea_orm(string_value = "regex_flag")]
    RegexFlag,
    #[sea_orm(string_value = "static_containerized")]
    StaticContainerized,
    #[sea_orm(string_value = "static_flag")]
    StaticFlag,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Copy, Serialize, Deserialize, utoipa::ToSchema)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "ticket_status_enum")]
#[serde(rename_all = "snake_case")]
pub enum TicketStatusEnum {
    #[sea_orm(string_value = "closed")]
    Closed,
    #[sea_orm(string_value = "open")]
    Open,
    #[sea_orm(string_value = "resolved")]
    Resolved,
}
