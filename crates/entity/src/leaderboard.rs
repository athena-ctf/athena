//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.1

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

use super::sea_orm_active_enums::CategoryEnum;

#[derive(
    Clone,
    Debug,
    PartialEq,
    DeriveEntityModel,
    Eq,
    Serialize,
    Deserialize,
    utoipa :: ToSchema,
    oxide_macros :: derive :: Details,
)]
#[sea_orm(table_name = "leaderboard")]
# [schema (as = LeaderboardModel)]
#[oxide(table(name = "Leaderboard"))]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    #[serde(skip_deserializing)]
    pub id: Uuid,
    pub created_at: DateTime,
    pub updated_at: DateTime,
    pub category: CategoryEnum,
    pub rank0: Option<String>,
    pub rank1: Option<String>,
    pub rank2: Option<String>,
    pub rank3: Option<String>,
    pub rank4: Option<String>,
    pub rank5: Option<String>,
    pub rank6: Option<String>,
    pub rank7: Option<String>,
    pub rank8: Option<String>,
    pub rank9: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
