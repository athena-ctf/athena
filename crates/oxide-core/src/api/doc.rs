use entity::extensions::{ContainerMeta, HintSummary, PartialChallenge, UpdateProfileSchema};
use utoipa::openapi::security::{Http, HttpAuthScheme, SecurityScheme};
use utoipa::{Modify, OpenApi};

use crate::handlers::*;
use crate::schemas::*;

#[derive(OpenApi)]
#[openapi(
    info(
        contact(
            email = "athena.help@gmail.com",
            name = "AthenaCTF Team"
        ),
        description = "TODO: add proper description",
        license(
            name = "MIT",
            url = "https://www.mit.edu/~amini/LICENSE.md"
        ),
        title = "Athena CTF",
        version = "0.1.0"
    ),
    paths(
        achievement::list,
        achievement::create,
        achievement::retrieve_by_id,
        achievement::update_by_id,
        achievement::delete_by_id,
        achievement::retrieve_player_by_id,
        achievement::retrieve_challenge_by_id,
        admin::list,
        admin::create,
        admin::retrieve_by_id,
        admin::update_by_id,
        admin::delete_by_id,
        admin::list_tickets_by_id,
        auth::admin::login,
        auth::admin::refresh_token,
        auth::admin::get_current_logged_in,
        auth::player::login,
        auth::player::refresh_token,
        auth::player::get_current_logged_in,
        auth::player::register,
        auth::player::register_send_token,
        auth::player::register_exists,
        auth::player::reset_password,
        auth::player::reset_password_send_token,
        ban::list,
        ban::create,
        ban::retrieve_by_id,
        ban::update_by_id,
        ban::delete_by_id,
        ban::add_player_by_id,
        ban::add_team_by_id,
        ban::retrieve_player_by_id,
        ban::retrieve_team_by_id,
        challenge_tag::list,
        challenge_tag::create,
        challenge_tag::retrieve_by_id,
        challenge_tag::update_by_id,
        challenge_tag::delete_by_id,
        challenge::list,
        challenge::create,
        challenge::retrieve_by_id,
        challenge::update_by_id,
        challenge::delete_by_id,
        challenge::list_files_by_id,
        challenge::list_hints_by_id,
        challenge::list_instances_by_id,
        challenge::list_tags_by_id,
        challenge::list_achievements_by_id,
        challenge::list_challenge_tags_by_id,
        challenge::list_submissions_by_id,
        challenge::player_challenges,
        challenge::detailed_challenge,
        file::list,
        file::create,
        file::retrieve_by_id,
        file::update_by_id,
        file::delete_by_id,
        file::retrieve_challenge_by_id,
        flag::list,
        flag::create,
        flag::retrieve_by_id,
        flag::update_by_id,
        flag::delete_by_id,
        flag::retrieve_challenge_by_id,
        flag::retrieve_player_by_id,
        flag::verify,
        hint::list,
        hint::create,
        hint::retrieve_by_id,
        hint::update_by_id,
        hint::delete_by_id,
        hint::retrieve_challenge_by_id,
        hint::list_unlocks_by_id,
        hint::unlock_by_id,
        instance::list,
        instance::create,
        instance::retrieve_by_id,
        instance::update_by_id,
        instance::delete_by_id,
        instance::retrieve_challenge_by_id,
        instance::retrieve_player_by_id,
        invite::list,
        invite::create,
        invite::retrieve_by_id,
        invite::update_by_id,
        invite::delete_by_id,
        invite::retrieve_team_by_id,
        invite::verify,
        leaderboard::top_10,
        leaderboard::rankings,
        notification::list,
        notification::create,
        notification::retrieve_by_id,
        notification::update_by_id,
        notification::delete_by_id,
        notification::retrieve_player_by_id,
        player::list,
        player::create,
        player::retrieve_by_id,
        player::update_by_id,
        player::delete_by_id,
        player::retrieve_profile_by_username,
        player::list_flags_by_id,
        player::retrieve_instance_by_id,
        player::retrieve_team_by_id,
        player::update_profile_by_id,
        player::list_achievements_by_id,
        player::list_notifications_by_id,
        player::list_submissions_by_id,
        player::list_unlocks_by_id,
        player::retrieve_ban_by_id,
        player::retrieve_summary,
        submission::list,
        submission::create,
        submission::retrieve_by_id,
        submission::update_by_id,
        submission::delete_by_id,
        tag::list,
        tag::create,
        tag::retrieve_by_id,
        tag::update_by_id,
        tag::delete_by_id,
        tag::list_challenges_by_id,
        team::list,
        team::create,
        team::retrieve_by_id,
        team::update_by_id,
        team::delete_by_id,
        team::list_invites_by_id,
        team::list_players_by_id,
        team::retrieve_ban_by_id,
        team::retrieve_team_by_teamname,
        team::update_details,
        team::retrieve_summary,
        ticket::list,
        ticket::create,
        ticket::retrieve_by_id,
        ticket::update_by_id,
        ticket::delete_by_id,
        ticket::retrieve_admin_by_id,
        unlock::list,
        unlock::create,
        unlock::retrieve_by_id,
        unlock::update_by_id,
        unlock::delete_by_id,
    ),
    components(
        schemas(
            AchievementModel,
            CreateAchievementSchema,
            AdminModel,
            CreateAdminSchema,
            BanModel,
            CreateBanSchema,
            ChallengeTagModel,
            CreateChallengeTagSchema,
            ChallengeModel,
            CreateChallengeSchema,
            FileModel,
            CreateFileSchema,
            FlagModel,
            CreateFlagSchema,
            HintModel,
            CreateHintSchema,
            InstanceModel,
            CreateInstanceSchema,
            InviteModel,
            CreateInviteSchema,
            NotificationModel,
            CreateNotificationSchema,
            PlayerModel,
            CreatePlayerSchema,
            SubmissionModel,
            CreateSubmissionSchema,
            TagModel,
            CreateTagSchema,
            TeamModel,
            CreateTeamSchema,
            TicketModel,
            CreateTicketSchema,
            UnlockModel,
            CreateUnlockSchema,
            UserModel,
            CreateUserSchema,
            UpdateProfileSchema,
            HintSummary,
            ContainerMeta,
            CategoryEnum,
            ChallengeStatusEnum,
            DifficultyEnum,
            FlagTypeEnum,
            GroupEnum,
            RoleEnum,
            TicketStatusEnum,
            LoginModel,
            JsonResponse,
            TokenPair,
            JsonResponse,
            ResetPasswordSchema,
            RegisterPlayer,
            VerifyFlagSchema,
            VerifyInviteSchema,
            FlagVerificationResult,
            TokenClaimKind,
            TokenType,
            TokenClaims,
            SendTokenSchema,
            ChallengeSummary,
            StatSchema,
            TagSolves,
            PlayerProfile,
            PartialChallenge,
            PlayerChallengeState,
            DetailedChallenge,
            PlayerSummary,
            TeamProfile,
            TeamSummary,
            LeaderboardRankings,
            Ranking,
            RegisterExistsQuery,
            InviteVerificationResult,
        )
    ),
    modifiers(&SecurityAddon),
    security(
        ("bearerAuth" = [])
    )
)]
pub struct Openapi;

pub struct SecurityAddon;

impl Modify for SecurityAddon {
    fn modify(&self, openapi: &mut utoipa::openapi::OpenApi) {
        let mut bearer_auth = Http::new(HttpAuthScheme::Bearer);
        bearer_auth.bearer_format = Some("Bearer".to_owned());

        if let Some(components) = openapi.components.as_mut() {
            components.add_security_scheme("bearerAuth", SecurityScheme::Http(bearer_auth));
        }
    }
}
