{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Settings",
  "type": "object",
  "required": [
    "challenge",
    "ctf",
    "database",
    "discord",
    "docker",
    "file_storage",
    "jwt",
    "redis",
    "smtp",
    "token"
  ],
  "properties": {
    "challenge": {
      "$ref": "#/definitions/Challenge"
    },
    "ctf": {
      "$ref": "#/definitions/Ctf"
    },
    "database": {
      "$ref": "#/definitions/Database"
    },
    "discord": {
      "$ref": "#/definitions/Discord"
    },
    "docker": {
      "$ref": "#/definitions/Docker"
    },
    "file_storage": {
      "$ref": "#/definitions/FileStorage"
    },
    "jwt": {
      "$ref": "#/definitions/Jwt"
    },
    "location": {
      "type": "string"
    },
    "redis": {
      "$ref": "#/definitions/Redis"
    },
    "smtp": {
      "$ref": "#/definitions/Smtp"
    },
    "token": {
      "$ref": "#/definitions/Token"
    }
  },
  "definitions": {
    "Aws": {
      "type": "object"
    },
    "Azure": {
      "type": "object",
      "required": [
        "account_key",
        "account_name"
      ],
      "properties": {
        "account_key": {
          "type": "string"
        },
        "account_name": {
          "type": "string"
        }
      }
    },
    "Challenge": {
      "type": "object",
      "required": [
        "container_registry",
        "container_timeout",
        "player_flag_len",
        "registry_password",
        "registry_username"
      ],
      "properties": {
        "container_registry": {
          "type": "string"
        },
        "container_timeout": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "max_attempts": {
          "type": "integer",
          "format": "uint",
          "minimum": 0.0
        },
        "player_flag_len": {
          "type": "integer",
          "format": "uint",
          "minimum": 0.0
        },
        "registry_password": {
          "type": "string"
        },
        "registry_username": {
          "type": "string"
        }
      }
    },
    "CompressionKind": {
      "type": "string",
      "enum": [
        "gzip",
        "zstd",
        "br"
      ]
    },
    "Ctf": {
      "type": "object",
      "required": [
        "description",
        "domain",
        "levels",
        "name",
        "prizes",
        "sponsors",
        "time"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "levels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Level"
          }
        },
        "name": {
          "type": "string"
        },
        "prizes": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "sponsors": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Sponsor"
            }
          }
        },
        "time": {
          "$ref": "#/definitions/Time"
        }
      }
    },
    "Database": {
      "type": "object",
      "required": [
        "host",
        "listener_channel",
        "password",
        "port",
        "username"
      ],
      "properties": {
        "database_name": {
          "default": "athena_db",
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "listener_channel": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "uint16",
          "minimum": 0.0
        },
        "username": {
          "type": "string"
        }
      }
    },
    "Discord": {
      "type": "object",
      "required": [
        "bot_token",
        "editor_role_id",
        "general_channel_id",
        "logs_channel_id",
        "reaction_role_message_id",
        "viewer_role_id",
        "welcome_channel_id"
      ],
      "properties": {
        "bot_token": {
          "type": "string"
        },
        "editor_role_id": {
          "type": "string"
        },
        "general_channel_id": {
          "type": "string"
        },
        "logs_channel_id": {
          "type": "string"
        },
        "reaction_role_message_id": {
          "type": "string"
        },
        "viewer_role_id": {
          "type": "string"
        },
        "welcome_channel_id": {
          "type": "string"
        }
      }
    },
    "Docker": {
      "type": "object",
      "required": [
        "registry_password",
        "registry_url",
        "registry_username"
      ],
      "properties": {
        "registry_password": {
          "type": "string"
        },
        "registry_url": {
          "type": "string"
        },
        "registry_username": {
          "type": "string"
        }
      }
    },
    "FileStorage": {
      "type": "object",
      "properties": {
        "aws": {
          "$ref": "#/definitions/Aws"
        },
        "azure": {
          "$ref": "#/definitions/Azure"
        },
        "gcp": {
          "$ref": "#/definitions/Gcp"
        },
        "local": {
          "$ref": "#/definitions/Local"
        },
        "remote_storage_options": {
          "$ref": "#/definitions/RemoteStorageOptions"
        }
      }
    },
    "Gcp": {
      "type": "object"
    },
    "Jwt": {
      "type": "object",
      "required": [
        "access_expiry_duration",
        "refresh_expiry_duration",
        "secret"
      ],
      "properties": {
        "access_expiry_duration": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "refresh_expiry_duration": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "secret": {
          "type": "string"
        }
      }
    },
    "Level": {
      "type": "object",
      "required": [
        "color",
        "name",
        "value"
      ],
      "properties": {
        "color": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Local": {
      "type": "object",
      "required": [
        "path"
      ],
      "properties": {
        "compress": {
          "$ref": "#/definitions/CompressionKind"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "Redis": {
      "type": "object",
      "required": [
        "host",
        "password",
        "port",
        "username"
      ],
      "properties": {
        "host": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "uint16",
          "minimum": 0.0
        },
        "username": {
          "type": "string"
        }
      }
    },
    "RemoteStorageOptions": {
      "type": "object",
      "required": [
        "bucket_name",
        "expires"
      ],
      "properties": {
        "bucket_name": {
          "type": "string"
        },
        "expires": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Smtp": {
      "type": "object",
      "required": [
        "from",
        "password",
        "reply_to",
        "server_url",
        "username"
      ],
      "properties": {
        "from": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "reply_to": {
          "type": "string"
        },
        "server_url": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "Sponsor": {
      "type": "object",
      "required": [
        "logo",
        "name"
      ],
      "properties": {
        "logo": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Time": {
      "type": "object",
      "required": [
        "end",
        "freeze",
        "start"
      ],
      "properties": {
        "end": {
          "type": "string",
          "format": "date-time"
        },
        "freeze": {
          "type": "string",
          "format": "date-time"
        },
        "start": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Token": {
      "type": "object",
      "required": [
        "max_retries",
        "token_expiry_in_secs"
      ],
      "properties": {
        "max_retries": {
          "type": "integer",
          "format": "uint8",
          "minimum": 0.0
        },
        "token_expiry_in_secs": {
          "type": "integer",
          "format": "int64"
        }
      }
    }
  }
}