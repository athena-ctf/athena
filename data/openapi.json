{
  "openapi": "3.1.0",
  "info": {
    "title": "Athena CTF",
    "description": "TODO: add proper description",
    "contact": {
      "name": "AthenaCTF Team",
      "email": "athena.help@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://www.mit.edu/~amini/LICENSE.md"
    },
    "version": "0.1.0"
  },
  "paths": {
    "/admin/achievement": {
      "get": {
        "tags": [
          "achievement"
        ],
        "summary": "List achievements",
        "operationId": "list_achievements",
        "responses": {
          "200": {
            "description": "Listed achievements successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AchievementModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "achievement"
        ],
        "summary": "Create achievement",
        "operationId": "create_achievement",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAchievementSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created achievement successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AchievementModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/achievement/{id}": {
      "get": {
        "tags": [
          "achievement"
        ],
        "summary": "Retrieve achievement by id",
        "operationId": "retrieve_achievement_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved achievement by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AchievementModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No achievement found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "achievement"
        ],
        "summary": "Delete achievement by id",
        "operationId": "delete_achievement",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted achievement by id successfully"
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No achievement found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "achievement"
        ],
        "summary": "Update achievement by id",
        "operationId": "update_achievement_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAchievementSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated achievement by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AchievementModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters/request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No achievement found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/achievement/{id}/challenge": {
      "get": {
        "tags": [
          "achievement"
        ],
        "summary": "List achievement challenge by id",
        "operationId": "retrieve_achievement_challenge_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved achievementchallenge by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChallengeModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No achievement found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/achievement/{id}/player": {
      "get": {
        "tags": [
          "achievement"
        ],
        "summary": "List achievement player by id",
        "operationId": "retrieve_achievement_player_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved achievementplayer by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No achievement found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/admin": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "List admins",
        "operationId": "list_admins",
        "responses": {
          "200": {
            "description": "Listed admins successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdminModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Create Admin",
        "operationId": "create_admin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAdminSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created admin successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No admin found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/admin/{id}": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Retrieve admin by id",
        "operationId": "retrieve_admin_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved admin by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No admin found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "admin"
        ],
        "summary": "Delete admin by id",
        "operationId": "delete_admin_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted admin by id successfully"
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No admin found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "admin"
        ],
        "summary": "Update admin by id",
        "operationId": "update_admin_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAdminSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated admin by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters/request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No admin found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/admin/{id}/tickets": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "List admin ticket by id",
        "operationId": "list_admin_tickets_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Listed admintickets by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TicketModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No admin found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/ban": {
      "get": {
        "tags": [
          "ban"
        ],
        "summary": "List bans",
        "operationId": "list_bans",
        "responses": {
          "200": {
            "description": "Listed bans successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BanModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ban"
        ],
        "summary": "Create Ban",
        "operationId": "create_ban",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBanSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created ban successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BanModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No ban found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/ban/{id}": {
      "get": {
        "tags": [
          "ban"
        ],
        "summary": "Retrieve ban by id",
        "operationId": "retrieve_ban_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved ban by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BanModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No ban found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ban"
        ],
        "summary": "Delete ban by id",
        "operationId": "delete_ban_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted ban by id successfully"
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No ban found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ban"
        ],
        "summary": "Update ban by id",
        "operationId": "update_ban_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBanSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated ban by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BanModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters/request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No ban found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/ban/{id}/player": {
      "get": {
        "tags": [
          "ban"
        ],
        "summary": "Retrieve ban player by id",
        "operationId": "retrieve_ban_player_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved banplayer by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No ban found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/ban/{id}/team": {
      "get": {
        "tags": [
          "ban"
        ],
        "summary": "Retrieve ban team by id",
        "operationId": "retrieve_ban_team_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved banteam by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No ban found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/challenge": {
      "get": {
        "tags": [
          "challenge"
        ],
        "summary": "List challenges",
        "operationId": "list_challenges",
        "responses": {
          "200": {
            "description": "Listed challenges successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChallengeModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "challenge"
        ],
        "summary": "Create Challenge",
        "operationId": "create_challenge",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateChallengeSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created challenge successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChallengeModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No challenge found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/challenge/{id}": {
      "get": {
        "tags": [
          "challenge"
        ],
        "summary": "Retrieve challenge by id",
        "operationId": "retrieve_challenge_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved challenge by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChallengeModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No challenge found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "challenge"
        ],
        "summary": "Delete challenge by id",
        "operationId": "delete_challenge_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted challenge by id successfully"
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No challenge found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "challenge"
        ],
        "summary": "Update challenge by id",
        "operationId": "update_challenge_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateChallengeSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated challenge by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChallengeModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters/request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No challenge found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/challenge/{id}/achievements": {
      "get": {
        "tags": [
          "challenge"
        ],
        "summary": "List challenge achievement by id",
        "operationId": "list_challenge_achievements_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Listed challengeachievements by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AchievementModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No challenge found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/challenge/{id}/challenge_tags": {
      "get": {
        "tags": [
          "challenge"
        ],
        "summary": "List challenge challenge_tag by id",
        "operationId": "list_challenge_challenge_tags_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Listed challengechallenge_tags by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChallengeTagModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No challenge found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/challenge/{id}/containers": {
      "get": {
        "tags": [
          "challenge"
        ],
        "summary": "List challenge container by id",
        "operationId": "list_challenge_containers_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Listed challengecontainers by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No challenge found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/challenge/{id}/files": {
      "get": {
        "tags": [
          "challenge"
        ],
        "summary": "List challenge file by id",
        "operationId": "list_challenge_files_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Listed challengefiles by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FileModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No challenge found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/challenge/{id}/hints": {
      "get": {
        "tags": [
          "challenge"
        ],
        "summary": "List challenge hint by id",
        "operationId": "list_challenge_hints_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Listed challengehints by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HintModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No challenge found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/challenge/{id}/instances": {
      "get": {
        "tags": [
          "challenge"
        ],
        "summary": "List challenge instance by id",
        "operationId": "list_challenge_instances_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Listed challengeinstances by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InstanceModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No challenge found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/challenge/{id}/submissions": {
      "get": {
        "tags": [
          "challenge"
        ],
        "summary": "List challenge submission by id",
        "operationId": "list_challenge_submissions_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Listed challengesubmissions by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubmissionModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No challenge found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/challenge/{id}/tags": {
      "get": {
        "tags": [
          "challenge"
        ],
        "summary": "List challenge tag by id",
        "operationId": "list_challenge_tags_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Listed challengetags by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TagModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No challenge found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/challenge_tag": {
      "get": {
        "tags": [
          "challenge_tag"
        ],
        "summary": "List challenge_tags",
        "operationId": "list_challenge_tags",
        "responses": {
          "200": {
            "description": "Listed challenge_tags successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChallengeTagModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "challenge_tag"
        ],
        "summary": "Create ChallengeTag",
        "operationId": "create_challenge_tag",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateChallengeTagSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created challenge_tag successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChallengeTagModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No challenge_tag found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/challenge_tag/{challenge_id}-{tag_id}": {
      "get": {
        "tags": [
          "challenge_tag"
        ],
        "summary": "Retrieve challenge_tag by id",
        "operationId": "retrieve_challenge_tag_by_id",
        "parameters": [
          {
            "name": "challenge_id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "tag_id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved challenge_tag by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChallengeTagModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No challenge_tag found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "challenge_tag"
        ],
        "summary": "Delete challenge_tag by id",
        "operationId": "delete_challenge_tag_by_id",
        "parameters": [
          {
            "name": "challenge_id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "tag_id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted challenge_tag by id successfully"
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No challenge_tag found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "challenge_tag"
        ],
        "summary": "Update challenge_tag by id",
        "operationId": "update_challenge_tag_by_id",
        "parameters": [
          {
            "name": "challenge_id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "tag_id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateChallengeTagSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated challenge_tag by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChallengeTagModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters/request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No challenge_tag found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/container": {
      "get": {
        "tags": [
          "container"
        ],
        "summary": "List containers",
        "operationId": "list_containers",
        "responses": {
          "200": {
            "description": "Listed containers successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "container"
        ],
        "summary": "Create Container",
        "operationId": "create_container",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContainerSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created container successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContainerModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No container found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/container/{id}": {
      "get": {
        "tags": [
          "container"
        ],
        "summary": "Retrieve container by id",
        "operationId": "retrieve_container_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved container by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContainerModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No container found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "container"
        ],
        "summary": "Delete container by id",
        "operationId": "delete_container_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted container by id successfully"
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No container found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "container"
        ],
        "summary": "Update container by id",
        "operationId": "update_container_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContainerSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated container by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContainerModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters/request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No container found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/container/{id}/challenge": {
      "get": {
        "tags": [
          "container"
        ],
        "summary": "List container challenge by id",
        "operationId": "retrieve_container_challenge_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved containerchallenge by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChallengeModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No container found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/file": {
      "get": {
        "tags": [
          "file"
        ],
        "summary": "List files",
        "operationId": "list_files",
        "responses": {
          "200": {
            "description": "Listed files successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FileModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "file"
        ],
        "summary": "Create File",
        "operationId": "create_file",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFileSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created file successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No file found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/file/{id}": {
      "get": {
        "tags": [
          "file"
        ],
        "summary": "Retrieve file by id",
        "operationId": "retrieve_file_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved file by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No file found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "file"
        ],
        "summary": "Delete file by id",
        "operationId": "delete_file_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted file by id successfully"
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No file found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "file"
        ],
        "summary": "Update file by id",
        "operationId": "update_file_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFileSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated file by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters/request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No file found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/file/{id}/challenge": {
      "get": {
        "tags": [
          "file"
        ],
        "summary": "List file challenge by id",
        "operationId": "retrieve_file_challenge_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved filechallenge by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChallengeModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No file found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/flag": {
      "get": {
        "tags": [
          "flag"
        ],
        "summary": "List flags",
        "operationId": "list_flags",
        "responses": {
          "200": {
            "description": "Listed flags successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FlagModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "flag"
        ],
        "summary": "Create Flag",
        "operationId": "create_flag",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFlagSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created flag successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlagModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No flag found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/flag/{id}": {
      "get": {
        "tags": [
          "flag"
        ],
        "summary": "Retrieve flag by id",
        "operationId": "retrieve_flag_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved flag by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlagModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No flag found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "flag"
        ],
        "summary": "Delete flag by id",
        "operationId": "delete_flag_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted flag by id successfully"
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No flag found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "flag"
        ],
        "summary": "Update flag by id",
        "operationId": "update_flag_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFlagSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated flag by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlagModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters/request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No flag found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/flag/{id}/challenge": {
      "get": {
        "tags": [
          "flag"
        ],
        "summary": "List flag challenge by id",
        "operationId": "retrieve_flag_challenge_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved flagchallenge by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChallengeModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No flag found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/flag/{id}/player": {
      "get": {
        "tags": [
          "flag"
        ],
        "summary": "Retrieve flag player by id",
        "operationId": "retrieve_flag_player_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved flagplayer by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No flag found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/hint": {
      "get": {
        "tags": [
          "hint"
        ],
        "summary": "List hints",
        "operationId": "list_hints",
        "responses": {
          "200": {
            "description": "Listed hints successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HintModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "hint"
        ],
        "summary": "Create Hint",
        "operationId": "create_hint",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateHintSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created hint successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HintModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No hint found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/hint/{id}": {
      "get": {
        "tags": [
          "hint"
        ],
        "summary": "Retrieve hint by id",
        "operationId": "retrieve_hint_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved hint by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HintModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No hint found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "hint"
        ],
        "summary": "Delete hint by id",
        "operationId": "delete_hint_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted hint by id successfully"
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No hint found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "hint"
        ],
        "summary": "Update hint by id",
        "operationId": "update_hint_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateHintSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated hint by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HintModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters/request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No hint found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/hint/{id}/challenge": {
      "get": {
        "tags": [
          "hint"
        ],
        "summary": "List hint challenge by id",
        "operationId": "retrieve_hint_challenge_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved hintchallenge by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChallengeModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No hint found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/hint/{id}/unlocks": {
      "get": {
        "tags": [
          "hint"
        ],
        "summary": "List hint unlock by id",
        "operationId": "list_hint_unlocks_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Listed hintunlocks by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnlockModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No hint found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/instance": {
      "get": {
        "tags": [
          "instance"
        ],
        "summary": "List instances",
        "operationId": "list_instances",
        "responses": {
          "200": {
            "description": "Listed instances successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InstanceModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "instance"
        ],
        "summary": "Create Instance",
        "operationId": "create_instance",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInstanceSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created instance successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No instance found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/instance/{id}": {
      "get": {
        "tags": [
          "instance"
        ],
        "summary": "Retrieve instance by id",
        "operationId": "retrieve_instance_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved instance by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No instance found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "instance"
        ],
        "summary": "Delete instance by id",
        "operationId": "delete_instance_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted instance by id successfully"
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No instance found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "instance"
        ],
        "summary": "Update instance by id",
        "operationId": "update_instance_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInstanceSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated instance by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters/request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No instance found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/instance/{id}/challenge": {
      "get": {
        "tags": [
          "instance"
        ],
        "summary": "List instance challenge by id",
        "operationId": "retrieve_instance_challenge_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved instancechallenge by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChallengeModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No instance found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/instance/{id}/player": {
      "get": {
        "tags": [
          "instance"
        ],
        "summary": "List instance player by id",
        "operationId": "retrieve_instance_player_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved instanceplayer by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No instance found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/invite": {
      "get": {
        "tags": [
          "invite"
        ],
        "summary": "List invites",
        "operationId": "list_invites",
        "responses": {
          "200": {
            "description": "Listed invites successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InviteModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "invite"
        ],
        "summary": "Create Invite",
        "operationId": "create_invite",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInviteSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created invite successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InviteModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No invite found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/invite/{id}": {
      "get": {
        "tags": [
          "invite"
        ],
        "summary": "Retrieve invite by id",
        "operationId": "retrieve_invite_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved invite by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InviteModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No invite found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "invite"
        ],
        "summary": "Delete invite by id",
        "operationId": "delete_invite_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted invite by id successfully"
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No invite found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "invite"
        ],
        "summary": "Update invite by id",
        "operationId": "update_invite_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInviteSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated invite by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InviteModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters/request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No invite found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/invite/{id}/team": {
      "get": {
        "tags": [
          "invite"
        ],
        "summary": "List invite team by id",
        "operationId": "retrieve_invite_team_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved inviteteam by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No invite found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/notification": {
      "get": {
        "tags": [
          "notification"
        ],
        "summary": "List notifications",
        "operationId": "list_notifications",
        "responses": {
          "200": {
            "description": "Listed notifications successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "notification"
        ],
        "summary": "Create Notification",
        "operationId": "create_notification",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created notification successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No notification found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/notification/{id}": {
      "get": {
        "tags": [
          "notification"
        ],
        "summary": "Retrieve notification by id",
        "operationId": "retrieve_notification_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved notification by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No notification found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "notification"
        ],
        "summary": "Delete notification by id",
        "operationId": "delete_notification_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted notification by id successfully"
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No notification found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "notification"
        ],
        "summary": "Update notification by id",
        "operationId": "update_notification_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated notification by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters/request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No notification found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/notification/{id}/player": {
      "get": {
        "tags": [
          "notification"
        ],
        "summary": "List notification player by id",
        "operationId": "retrieve_notification_player_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved notificationplayer by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No notification found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/player": {
      "get": {
        "tags": [
          "player"
        ],
        "summary": "List players",
        "operationId": "list_players",
        "responses": {
          "200": {
            "description": "Listed players successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlayerModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "player"
        ],
        "summary": "Create Player",
        "operationId": "create_player",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlayerSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created player successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No player found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/player/{id}": {
      "get": {
        "tags": [
          "player"
        ],
        "summary": "Retrieve player by id",
        "operationId": "retrieve_player_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved player by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No player found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "player"
        ],
        "summary": "Delete player by id",
        "operationId": "delete_player_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted player by id successfully"
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No player found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "player"
        ],
        "summary": "Update player by id",
        "operationId": "update_player_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlayerSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated player by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters/request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No player found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/player/{id}/achievements": {
      "get": {
        "tags": [
          "player"
        ],
        "summary": "List player achievement by id",
        "operationId": "list_player_achievements_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Listed playerachievements by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AchievementModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No player found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/player/{id}/ban": {
      "get": {
        "tags": [
          "player"
        ],
        "summary": "Retrieve player ban by id",
        "operationId": "retrieve_player_ban_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved playerban by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BanModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No player found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/player/{id}/flags": {
      "get": {
        "tags": [
          "player"
        ],
        "summary": "List player flag by id",
        "operationId": "list_player_flags_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Listed playerflags by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FlagModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No player found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/player/{id}/instance": {
      "get": {
        "tags": [
          "player"
        ],
        "summary": "Retrieve player instance by id",
        "operationId": "retrieve_player_instance_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved playerinstance by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No player found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/player/{id}/notifications": {
      "get": {
        "tags": [
          "player"
        ],
        "summary": "List player notification by id",
        "operationId": "list_player_notifications_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Listed playernotifications by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No player found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/player/{id}/submissions": {
      "get": {
        "tags": [
          "player"
        ],
        "summary": "List player submission by id",
        "operationId": "list_player_submissions_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Listed playersubmissions by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubmissionModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No player found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/player/{id}/team": {
      "get": {
        "tags": [
          "player"
        ],
        "summary": "List player team by id",
        "operationId": "retrieve_player_team_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved playerteam by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No player found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/player/{id}/unlocks": {
      "get": {
        "tags": [
          "player"
        ],
        "summary": "List player unlock by id",
        "operationId": "list_player_unlocks_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Listed playerunlocks by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnlockModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No player found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/submission": {
      "get": {
        "tags": [
          "submission"
        ],
        "summary": "List submissions",
        "operationId": "list_submissions",
        "responses": {
          "200": {
            "description": "Listed submissions successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubmissionModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "submission"
        ],
        "summary": "Create Submission",
        "operationId": "create_submission",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubmissionSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created submission successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No submission found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/submission/{challenge_id}-{player_id}": {
      "get": {
        "tags": [
          "submission"
        ],
        "summary": "Retrieve submission by id",
        "operationId": "retrieve_submission_by_id",
        "parameters": [
          {
            "name": "challenge_id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "player_id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved submission by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No submission found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "submission"
        ],
        "summary": "Delete submission by id",
        "operationId": "delete_submission_by_id",
        "parameters": [
          {
            "name": "challenge_id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "player_id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted submission by id successfully"
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No submission found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "submission"
        ],
        "summary": "Update submission by id",
        "operationId": "update_submission_by_id",
        "parameters": [
          {
            "name": "challenge_id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "player_id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubmissionSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated submission by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters/request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No submission found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/tag": {
      "get": {
        "tags": [
          "tag"
        ],
        "summary": "List tags",
        "operationId": "list_tags",
        "responses": {
          "200": {
            "description": "Listed tags successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TagModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "tag"
        ],
        "summary": "Create Tag",
        "operationId": "create_tag",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTagSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created tag successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No tag found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/tag/{id}": {
      "get": {
        "tags": [
          "tag"
        ],
        "summary": "Retrieve tag by id",
        "operationId": "retrieve_tag_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved tag by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No tag found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tag"
        ],
        "summary": "Delete tag by id",
        "operationId": "delete_tag_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted tag by id successfully"
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No tag found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "tag"
        ],
        "summary": "Update tag by id",
        "operationId": "update_tag_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTagSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated tag by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters/request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No tag found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/tag/{id}/challenges": {
      "get": {
        "tags": [
          "tag"
        ],
        "summary": "List tag challenge by id",
        "operationId": "list_tag_challenges_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Listed tagchallenges by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChallengeModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No tag found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/team": {
      "get": {
        "tags": [
          "team"
        ],
        "summary": "List teams",
        "operationId": "list_teams",
        "responses": {
          "200": {
            "description": "Listed teams successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "team"
        ],
        "summary": "Create Team",
        "operationId": "create_team",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTeamSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created team successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No team found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/team/{id}": {
      "get": {
        "tags": [
          "team"
        ],
        "summary": "Retrieve team by id",
        "operationId": "retrieve_team_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved team by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No team found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "team"
        ],
        "summary": "Delete team by id",
        "operationId": "delete_team_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted team by id successfully"
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No team found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "team"
        ],
        "summary": "Update team by id",
        "operationId": "update_team_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTeamSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated team by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters/request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No team found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/team/{id}/ban": {
      "get": {
        "tags": [
          "team"
        ],
        "summary": "Retrieve team ban by id",
        "operationId": "retrieve_team_ban_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved teamban by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BanModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No team found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/team/{id}/invites": {
      "get": {
        "tags": [
          "team"
        ],
        "summary": "List team invite by id",
        "operationId": "list_team_invites_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Listed teaminvites by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InviteModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No team found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/team/{id}/players": {
      "get": {
        "tags": [
          "team"
        ],
        "summary": "List team player by id",
        "operationId": "list_team_players_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Listed teamplayers by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlayerModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No team found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/ticket": {
      "get": {
        "tags": [
          "ticket"
        ],
        "summary": "List tickets",
        "operationId": "list_tickets",
        "responses": {
          "200": {
            "description": "Listed tickets successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TicketModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ticket"
        ],
        "summary": "Create Ticket",
        "operationId": "create_ticket",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTicketSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created ticket successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No ticket found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/ticket/{id}": {
      "get": {
        "tags": [
          "ticket"
        ],
        "summary": "Retrieve ticket by id",
        "operationId": "retrieve_ticket_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved ticket by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No ticket found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ticket"
        ],
        "summary": "Delete ticket by id",
        "operationId": "delete_ticket_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted ticket by id successfully"
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No ticket found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ticket"
        ],
        "summary": "Update ticket by id",
        "operationId": "update_ticket_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTicketSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated ticket by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters/request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No ticket found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/ticket/{id}/admin": {
      "get": {
        "tags": [
          "ticket"
        ],
        "summary": "Retrieve ticket admin by id",
        "operationId": "retrieve_ticket_admin_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved ticketadmin by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No ticket found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/unlock": {
      "get": {
        "tags": [
          "unlock"
        ],
        "summary": "List unlocks",
        "operationId": "list_unlocks",
        "responses": {
          "200": {
            "description": "Listed unlocks successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnlockModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "unlock"
        ],
        "summary": "Create Unlock",
        "operationId": "create_unlock",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUnlockSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created unlock successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnlockModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No unlock found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/unlock/{player_id}-{hint_id}": {
      "get": {
        "tags": [
          "unlock"
        ],
        "summary": "Retrieve unlock by id",
        "operationId": "retrieve_unlock_by_id",
        "parameters": [
          {
            "name": "player_id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "hint_id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved unlock by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnlockModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No unlock found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "unlock"
        ],
        "summary": "Delete unlock by id",
        "operationId": "delete_unlock_by_id",
        "parameters": [
          {
            "name": "player_id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "hint_id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted unlock by id successfully"
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No unlock found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "unlock"
        ],
        "summary": "Update unlock by id",
        "operationId": "update_unlock_by_id",
        "parameters": [
          {
            "name": "player_id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "hint_id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUnlockSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated unlock by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnlockModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters/request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No unlock found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/admin/current": {
      "get": {
        "tags": [
          "auth::admin"
        ],
        "summary": "Return currently authenticated user",
        "operationId": "admin_get_current_logged_in",
        "responses": {
          "200": {
            "description": "Password reset email sent successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/admin/login": {
      "post": {
        "tags": [
          "auth::admin"
        ],
        "summary": "Create auth token",
        "operationId": "admin_login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "user logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenPair"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        },
        "security": [
          {}
        ]
      }
    },
    "/auth/admin/token/refresh": {
      "post": {
        "tags": [
          "auth::admin"
        ],
        "summary": "Refresh auth token",
        "operationId": "admin_refresh_token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenPair"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "user logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenPair"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/player/current": {
      "get": {
        "tags": [
          "auth::player"
        ],
        "summary": "Return currently authenticated user",
        "operationId": "player_get_current_logged_in",
        "responses": {
          "200": {
            "description": "Retrieved current logged in user successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/player/login": {
      "post": {
        "tags": [
          "auth::player"
        ],
        "summary": "Create auth token",
        "operationId": "player_login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Player logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenPair"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        },
        "security": [
          {}
        ]
      }
    },
    "/auth/player/register": {
      "post": {
        "tags": [
          "auth::player"
        ],
        "summary": "Register user",
        "operationId": "player_register",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterPlayer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Registered user successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        },
        "security": [
          {}
        ]
      }
    },
    "/auth/player/register/exists": {
      "get": {
        "tags": [
          "auth::player"
        ],
        "summary": "Check user exists",
        "operationId": "player_register_exists",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "Email of user to check",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User existence check successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        },
        "security": [
          {}
        ]
      }
    },
    "/auth/player/register/send-token": {
      "post": {
        "tags": [
          "auth::player"
        ],
        "summary": "Send verification token to email",
        "operationId": "player_register_send_token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendTokenSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Token sent successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        },
        "security": [
          {}
        ]
      }
    },
    "/auth/player/reset-password": {
      "post": {
        "tags": [
          "auth::player"
        ],
        "summary": "Auth reset password",
        "operationId": "player_reset_password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Reset password successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        },
        "security": [
          {}
        ]
      }
    },
    "/auth/player/reset-password/send-token": {
      "post": {
        "tags": [
          "auth::player"
        ],
        "summary": "Send reset token to email",
        "operationId": "player_reset_password_send_token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendTokenSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Token sent successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        },
        "security": [
          {}
        ]
      }
    },
    "/auth/player/token/refresh": {
      "post": {
        "tags": [
          "auth::player"
        ],
        "summary": "Refresh auth token",
        "operationId": "player_refresh_token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenPair"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Refreshed token successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenPair"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ban/player/{id}": {
      "post": {
        "tags": [
          "ban"
        ],
        "summary": "Ban player by id",
        "operationId": "add_player_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBanSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Banned player by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BanModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No ban found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ban/team/{id}": {
      "post": {
        "tags": [
          "ban"
        ],
        "summary": "Ban team by id",
        "operationId": "add_team_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBanSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Banned team by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BanModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No ban found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/player/challenge/details/{id}": {
      "get": {
        "tags": [
          "challenge"
        ],
        "summary": "Retrieve challenge details by id",
        "operationId": "detailed_challenge",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the challenge",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved player challenge details successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedChallenge"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No challenge found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/player/challenge/start/{id}": {
      "get": {
        "tags": [
          "challenge"
        ],
        "summary": "Start challenge containers by id",
        "operationId": "start_challenge",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the challenge",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Started challenge containers successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChallengeDeployment"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No challenge found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/player/challenge/stop/{id}": {
      "get": {
        "tags": [
          "challenge"
        ],
        "summary": "Stop challenge containers by id",
        "operationId": "stop_challenge",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the challenge",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Stopped challenge containers successfully"
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No challenge found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/player/challenges": {
      "get": {
        "tags": [
          "challenge"
        ],
        "summary": "List challenge summary by id",
        "operationId": "player_challenges",
        "responses": {
          "200": {
            "description": "Listed player challenges successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChallengeSummary"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No challenge found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/player/flag/verify": {
      "post": {
        "tags": [
          "flag"
        ],
        "summary": "Verify flag",
        "operationId": "verify_flag",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyFlagSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Verified flag successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlagVerificationResult"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/player/hint/unlock/{id}": {
      "get": {
        "tags": [
          "hint"
        ],
        "summary": "Unlock hint by id",
        "operationId": "unlock_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unlocked hint by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HintModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No hint found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/player/invite/verify": {
      "post": {
        "tags": [
          "invite"
        ],
        "summary": "Verify invite",
        "operationId": "verify_invite",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyInviteSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Verified invite successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InviteVerificationResult"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/player/leaderboard/rankings": {
      "post": {
        "tags": [
          "leaderboard"
        ],
        "summary": "List leaderboard rankings with offset and count",
        "operationId": "rankings",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "Offset of the rankings",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Number of players to get",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Listed leaderboard rankings with offset and count successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaderboardRankings"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/player/leaderboard/top10": {
      "post": {
        "tags": [
          "leaderboard"
        ],
        "summary": "List top 10 of leaderboard",
        "operationId": "top_10",
        "responses": {
          "200": {
            "description": "Listed top 10 rankings successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ranking"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/player/summary": {
      "get": {
        "tags": [
          "player"
        ],
        "summary": "Retrieve player summary",
        "operationId": "retrieve_player_summary",
        "responses": {
          "200": {
            "description": "Retrieved player summary by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerSummary"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters/request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No player found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/player/team/summary": {
      "get": {
        "tags": [
          "team"
        ],
        "summary": "Retrieve team summary",
        "operationId": "retrieve_team_summary",
        "responses": {
          "200": {
            "description": "Retrieved team summary by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamSummary"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters/request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No player found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/player/team/{id}/profile": {
      "put": {
        "tags": [
          "team"
        ],
        "summary": "Retrieve team details by teamname",
        "operationId": "update_team_profile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTeamSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Retrieved team details by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No player found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/player/team/{teamname}/profile": {
      "get": {
        "tags": [
          "team"
        ],
        "summary": "Retrieve team details by teamname",
        "operationId": "retrieve_team_by_teamname",
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "description": "Team name of team",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved team details by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamProfile"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No player found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/player/{id}/update-profile": {
      "put": {
        "tags": [
          "player"
        ],
        "summary": "Update player profile by id",
        "operationId": "update_player_profile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfileSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated player profile by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters/request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No player found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/player/{username}/profile": {
      "get": {
        "tags": [
          "player"
        ],
        "summary": "Retrieve player profile by username",
        "operationId": "retrieve_profile_by_username",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Username of user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved player profile by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerProfile"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404": {
            "description": "No player found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AchievementModel": {
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "value",
          "prize",
          "challenge_id",
          "player_id"
        ],
        "properties": {
          "challenge_id": {
            "type": "string",
            "format": "uuid"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "player_id": {
            "type": "string",
            "format": "uuid"
          },
          "prize": {
            "type": "integer",
            "format": "int32"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "AdminModel": {
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "role",
          "user_id"
        ],
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "role": {
            "$ref": "#/components/schemas/RoleEnum"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "BanModel": {
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "reason",
          "duration"
        ],
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "duration": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "reason": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CategoryEnum": {
        "type": "string",
        "enum": [
          "player",
          "team"
        ]
      },
      "ChallengeDeployment": {
        "type": "object",
        "required": [
          "expires_at",
          "subdomain",
          "port_bindings"
        ],
        "properties": {
          "expires_at": {
            "type": "string",
            "format": "date-time"
          },
          "port_bindings": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "propertyNames": {
              "type": "string"
            }
          },
          "subdomain": {
            "type": "string"
          }
        }
      },
      "ChallengeModel": {
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "title",
          "description",
          "points",
          "difficulty",
          "flag_type",
          "status",
          "ignore_case",
          "author_name",
          "solves"
        ],
        "properties": {
          "author_name": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "difficulty": {
            "$ref": "#/components/schemas/DifficultyEnum"
          },
          "flag_type": {
            "$ref": "#/components/schemas/FlagTypeEnum"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "ignore_case": {
            "type": "boolean"
          },
          "points": {
            "type": "integer",
            "format": "int32"
          },
          "solves": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/ChallengeStatusEnum"
          },
          "title": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ChallengeStatusEnum": {
        "type": "string",
        "enum": [
          "active",
          "maintenance",
          "scheduled"
        ]
      },
      "ChallengeSummary": {
        "type": "object",
        "required": [
          "challenge",
          "tags",
          "state"
        ],
        "properties": {
          "challenge": {
            "$ref": "#/components/schemas/PartialChallenge"
          },
          "state": {
            "$ref": "#/components/schemas/PlayerChallengeState"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateTagSchema"
            }
          }
        }
      },
      "ChallengeTagModel": {
        "type": "object",
        "required": [
          "created_at",
          "updated_at",
          "challenge_id",
          "tag_id"
        ],
        "properties": {
          "challenge_id": {
            "type": "string",
            "format": "uuid"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "tag_id": {
            "type": "string",
            "format": "uuid"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ContainerModel": {
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "challenge_id",
          "name",
          "image",
          "internal",
          "memory_limit",
          "command",
          "environment",
          "ports",
          "networks",
          "depends_on"
        ],
        "properties": {
          "challenge_id": {
            "type": "string",
            "format": "uuid"
          },
          "command": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "depends_on": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "environment": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "image": {
            "type": "string"
          },
          "internal": {
            "type": "boolean"
          },
          "memory_limit": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "networks": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ports": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateAchievementSchema": {
        "type": "object",
        "required": [
          "value",
          "prize",
          "challenge_id",
          "player_id"
        ],
        "properties": {
          "challenge_id": {
            "type": "string",
            "format": "uuid"
          },
          "player_id": {
            "type": "string",
            "format": "uuid"
          },
          "prize": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "CreateAdminSchema": {
        "type": "object",
        "required": [
          "role",
          "user_id"
        ],
        "properties": {
          "role": {
            "$ref": "#/components/schemas/RoleEnum"
          },
          "user_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "CreateBanSchema": {
        "type": "object",
        "required": [
          "reason",
          "duration"
        ],
        "properties": {
          "duration": {
            "type": "integer",
            "format": "int32"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "CreateChallengeSchema": {
        "type": "object",
        "required": [
          "title",
          "description",
          "points",
          "difficulty",
          "flag_type",
          "status",
          "ignore_case",
          "author_name",
          "solves"
        ],
        "properties": {
          "author_name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "difficulty": {
            "$ref": "#/components/schemas/DifficultyEnum"
          },
          "flag_type": {
            "$ref": "#/components/schemas/FlagTypeEnum"
          },
          "ignore_case": {
            "type": "boolean"
          },
          "points": {
            "type": "integer",
            "format": "int32"
          },
          "solves": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/ChallengeStatusEnum"
          },
          "title": {
            "type": "string"
          }
        }
      },
      "CreateChallengeTagSchema": {
        "type": "object",
        "required": [
          "challenge_id",
          "tag_id"
        ],
        "properties": {
          "challenge_id": {
            "type": "string",
            "format": "uuid"
          },
          "tag_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "CreateContainerSchema": {
        "type": "object",
        "required": [
          "challenge_id",
          "name",
          "image",
          "internal",
          "memory_limit",
          "command",
          "environment",
          "ports",
          "networks",
          "depends_on"
        ],
        "properties": {
          "challenge_id": {
            "type": "string",
            "format": "uuid"
          },
          "command": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "depends_on": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "environment": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "image": {
            "type": "string"
          },
          "internal": {
            "type": "boolean"
          },
          "memory_limit": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "networks": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ports": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "CreateFileSchema": {
        "type": "object",
        "required": [
          "name",
          "url",
          "challenge_id"
        ],
        "properties": {
          "challenge_id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "CreateFlagSchema": {
        "type": "object",
        "required": [
          "value",
          "challenge_id"
        ],
        "properties": {
          "challenge_id": {
            "type": "string",
            "format": "uuid"
          },
          "player_id": {
            "type": [
              "string",
              "null"
            ],
            "format": "uuid"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "CreateHintSchema": {
        "type": "object",
        "required": [
          "description",
          "cost",
          "challenge_id"
        ],
        "properties": {
          "challenge_id": {
            "type": "string",
            "format": "uuid"
          },
          "cost": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "CreateInstanceSchema": {
        "type": "object",
        "required": [
          "container_id",
          "expiry",
          "challenge_id",
          "player_id"
        ],
        "properties": {
          "challenge_id": {
            "type": "string",
            "format": "uuid"
          },
          "container_id": {
            "type": "string"
          },
          "expiry": {
            "type": "string",
            "format": "date-time"
          },
          "player_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "CreateInviteSchema": {
        "type": "object",
        "required": [
          "remaining",
          "team_id"
        ],
        "properties": {
          "remaining": {
            "type": "integer",
            "format": "int32"
          },
          "team_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "CreateNotificationSchema": {
        "type": "object",
        "required": [
          "title",
          "content",
          "player_id"
        ],
        "properties": {
          "content": {
            "type": "string"
          },
          "player_id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string"
          }
        }
      },
      "CreatePlayerSchema": {
        "type": "object",
        "required": [
          "display_name",
          "team_id",
          "user_id",
          "score"
        ],
        "properties": {
          "ban_id": {
            "type": [
              "string",
              "null"
            ],
            "format": "uuid"
          },
          "discord_id": {
            "type": [
              "string",
              "null"
            ]
          },
          "display_name": {
            "type": "string"
          },
          "score": {
            "type": "integer",
            "format": "int32"
          },
          "team_id": {
            "type": "string",
            "format": "uuid"
          },
          "user_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "CreateSubmissionSchema": {
        "type": "object",
        "required": [
          "is_correct",
          "player_id",
          "challenge_id",
          "flags"
        ],
        "properties": {
          "challenge_id": {
            "type": "string",
            "format": "uuid"
          },
          "flags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "is_correct": {
            "type": "boolean"
          },
          "player_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "CreateTagSchema": {
        "type": "object",
        "required": [
          "value"
        ],
        "properties": {
          "value": {
            "type": "string"
          }
        }
      },
      "CreateTeamSchema": {
        "type": "object",
        "required": [
          "email",
          "name",
          "score"
        ],
        "properties": {
          "ban_id": {
            "type": [
              "string",
              "null"
            ],
            "format": "uuid"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "score": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateTicketSchema": {
        "type": "object",
        "required": [
          "title",
          "status"
        ],
        "properties": {
          "assigned_to": {
            "type": [
              "string",
              "null"
            ],
            "format": "uuid"
          },
          "status": {
            "$ref": "#/components/schemas/TicketStatusEnum"
          },
          "title": {
            "type": "string"
          }
        }
      },
      "CreateUnlockSchema": {
        "type": "object",
        "required": [
          "player_id",
          "hint_id"
        ],
        "properties": {
          "hint_id": {
            "type": "string",
            "format": "uuid"
          },
          "player_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "CreateUserSchema": {
        "type": "object",
        "required": [
          "username",
          "email",
          "password",
          "group"
        ],
        "properties": {
          "email": {
            "type": "string"
          },
          "group": {
            "$ref": "#/components/schemas/GroupEnum"
          },
          "password": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "DetailedChallenge": {
        "type": "object",
        "required": [
          "files",
          "hints"
        ],
        "properties": {
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateFileSchema"
            }
          },
          "hints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HintSummary"
            }
          }
        }
      },
      "DifficultyEnum": {
        "type": "string",
        "enum": [
          "easy",
          "extreme",
          "hard",
          "medium"
        ]
      },
      "FileModel": {
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "url",
          "challenge_id"
        ],
        "properties": {
          "challenge_id": {
            "type": "string",
            "format": "uuid"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "FlagModel": {
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "value",
          "challenge_id"
        ],
        "properties": {
          "challenge_id": {
            "type": "string",
            "format": "uuid"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "player_id": {
            "type": [
              "string",
              "null"
            ],
            "format": "uuid"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "FlagTypeEnum": {
        "type": "string",
        "enum": [
          "per_user",
          "regex",
          "static"
        ]
      },
      "FlagVerificationResult": {
        "type": "object",
        "required": [
          "is_correct"
        ],
        "properties": {
          "is_correct": {
            "type": "boolean"
          }
        }
      },
      "GroupEnum": {
        "type": "string",
        "enum": [
          "admin",
          "player"
        ]
      },
      "HintModel": {
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "description",
          "cost",
          "challenge_id"
        ],
        "properties": {
          "challenge_id": {
            "type": "string",
            "format": "uuid"
          },
          "cost": {
            "type": "integer",
            "format": "int32"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "HintSummary": {
        "type": "object",
        "required": [
          "id",
          "cost",
          "status"
        ],
        "properties": {
          "cost": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "$ref": "#/components/schemas/UnlockStatus"
          }
        }
      },
      "InstanceModel": {
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "container_id",
          "expiry",
          "challenge_id",
          "player_id"
        ],
        "properties": {
          "challenge_id": {
            "type": "string",
            "format": "uuid"
          },
          "container_id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "expiry": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "player_id": {
            "type": "string",
            "format": "uuid"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "InviteModel": {
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "remaining",
          "team_id"
        ],
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "remaining": {
            "type": "integer",
            "format": "int32"
          },
          "team_id": {
            "type": "string",
            "format": "uuid"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "InviteVerificationResult": {
        "type": "object",
        "required": [
          "team_id"
        ],
        "properties": {
          "team_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "JsonResponse": {
        "type": "object",
        "required": [
          "message"
        ],
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "LeaderboardRankings": {
        "type": "object",
        "required": [
          "total",
          "offset",
          "count",
          "rankings"
        ],
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "rankings": {
            "type": "array",
            "items": {
              "type": "array",
              "items": false,
              "prefixItems": [
                {
                  "type": "string"
                },
                {
                  "type": "number",
                  "format": "double"
                }
              ]
            }
          },
          "total": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "LoginModel": {
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "properties": {
          "password": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "NotificationModel": {
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "title",
          "content",
          "player_id"
        ],
        "properties": {
          "content": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "player_id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PartialChallenge": {
        "type": "object",
        "required": [
          "id",
          "title",
          "description",
          "points",
          "difficulty",
          "author_name",
          "solves"
        ],
        "properties": {
          "author_name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "difficulty": {
            "$ref": "#/components/schemas/DifficultyEnum"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "points": {
            "type": "integer",
            "format": "int32"
          },
          "solves": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string"
          }
        }
      },
      "PlayerChallengeState": {
        "type": "string",
        "enum": [
          "solved",
          "unsolved",
          "challenge_limit_reached"
        ]
      },
      "PlayerModel": {
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "display_name",
          "team_id",
          "user_id",
          "score"
        ],
        "properties": {
          "ban_id": {
            "type": [
              "string",
              "null"
            ],
            "format": "uuid"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "discord_id": {
            "type": [
              "string",
              "null"
            ]
          },
          "display_name": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "score": {
            "type": "integer",
            "format": "int32"
          },
          "team_id": {
            "type": "string",
            "format": "uuid"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "PlayerProfile": {
        "type": "object",
        "required": [
          "player",
          "user",
          "solved_challenges",
          "tag_solves",
          "rank"
        ],
        "properties": {
          "player": {
            "$ref": "#/components/schemas/PlayerModel"
          },
          "rank": {
            "type": "integer",
            "format": "int64"
          },
          "solved_challenges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChallengeModel"
            }
          },
          "tag_solves": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagSolves"
            }
          },
          "user": {
            "$ref": "#/components/schemas/UserModel"
          }
        }
      },
      "PlayerSummary": {
        "type": "object",
        "required": [
          "profile",
          "submissions",
          "unlocks",
          "achievements"
        ],
        "properties": {
          "achievements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AchievementModel"
            }
          },
          "profile": {
            "$ref": "#/components/schemas/PlayerProfile"
          },
          "submissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubmissionModel"
            }
          },
          "unlocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UnlockModel"
            }
          }
        }
      },
      "Ranking": {
        "type": "object",
        "required": [
          "member",
          "score"
        ],
        "properties": {
          "member": {
            "type": "string"
          },
          "score": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "RegisterExistsQuery": {
        "type": "object",
        "required": [
          "email",
          "username"
        ],
        "properties": {
          "email": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "RegisterPlayer": {
        "type": "object",
        "required": [
          "display_name",
          "email",
          "username",
          "password",
          "token",
          "team"
        ],
        "properties": {
          "display_name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "team": {
            "$ref": "#/components/schemas/TeamRegister"
          },
          "token": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "ResetPasswordSchema": {
        "type": "object",
        "required": [
          "token",
          "email",
          "new_password"
        ],
        "properties": {
          "email": {
            "type": "string"
          },
          "new_password": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        }
      },
      "RoleEnum": {
        "type": "string",
        "enum": [
          "analyst",
          "editor",
          "judge",
          "manager",
          "moderator"
        ]
      },
      "SendTokenSchema": {
        "type": "object",
        "required": [
          "email"
        ],
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "StatSchema": {
        "type": "object",
        "required": [
          "achievement",
          "ban",
          "challenge",
          "file",
          "flag",
          "hint",
          "instance",
          "invite",
          "notification",
          "player",
          "submission",
          "tag",
          "team",
          "unlocks"
        ],
        "properties": {
          "achievement": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "ban": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "challenge": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "file": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "flag": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "hint": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "instance": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "invite": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "notification": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "player": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "submission": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "tag": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "team": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "unlocks": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          }
        }
      },
      "SubmissionModel": {
        "type": "object",
        "required": [
          "created_at",
          "updated_at",
          "is_correct",
          "player_id",
          "challenge_id",
          "flags"
        ],
        "properties": {
          "challenge_id": {
            "type": "string",
            "format": "uuid"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "flags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "is_correct": {
            "type": "boolean"
          },
          "player_id": {
            "type": "string",
            "format": "uuid"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TagModel": {
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "value"
        ],
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "TagSolves": {
        "type": "object",
        "required": [
          "tag_id",
          "tag_value",
          "solves"
        ],
        "properties": {
          "solves": {
            "type": "integer",
            "minimum": 0
          },
          "tag_id": {
            "type": "string",
            "format": "uuid"
          },
          "tag_value": {
            "type": "string"
          }
        }
      },
      "TeamModel": {
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "email",
          "name",
          "score"
        ],
        "properties": {
          "ban_id": {
            "type": [
              "string",
              "null"
            ],
            "format": "uuid"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "score": {
            "type": "integer",
            "format": "int32"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TeamProfile": {
        "type": "object",
        "required": [
          "team",
          "solved_challenges",
          "tag_solves",
          "members"
        ],
        "properties": {
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreatePlayerSchema"
            }
          },
          "solved_challenges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChallengeModel"
            }
          },
          "tag_solves": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagSolves"
            }
          },
          "team": {
            "$ref": "#/components/schemas/TeamModel"
          }
        }
      },
      "TeamRegister": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "team_id",
              "invite_id",
              "kind"
            ],
            "properties": {
              "invite_id": {
                "type": "string",
                "format": "uuid"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "join"
                ]
              },
              "team_id": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "team_name",
              "kind"
            ],
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "create"
                ]
              },
              "team_name": {
                "type": "string"
              }
            }
          }
        ]
      },
      "TeamSummary": {
        "type": "object",
        "required": [
          "team",
          "members",
          "submissions",
          "unlocks",
          "achievements",
          "tag_solves"
        ],
        "properties": {
          "achievements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AchievementModel"
            }
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlayerProfile"
            }
          },
          "submissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubmissionModel"
            }
          },
          "tag_solves": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagSolves"
            }
          },
          "team": {
            "$ref": "#/components/schemas/TeamModel"
          },
          "unlocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UnlockModel"
            }
          }
        }
      },
      "TicketModel": {
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "title",
          "status"
        ],
        "properties": {
          "assigned_to": {
            "type": [
              "string",
              "null"
            ],
            "format": "uuid"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "$ref": "#/components/schemas/TicketStatusEnum"
          },
          "title": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TicketStatusEnum": {
        "type": "string",
        "enum": [
          "closed",
          "open",
          "resolved"
        ]
      },
      "TokenClaimKind": {
        "oneOf": [
          {
            "type": "string",
            "enum": [
              "player"
            ]
          },
          {
            "type": "object",
            "required": [
              "admin"
            ],
            "properties": {
              "admin": {
                "$ref": "#/components/schemas/RoleEnum"
              }
            }
          }
        ]
      },
      "TokenClaims": {
        "type": "object",
        "required": [
          "id",
          "exp",
          "iat",
          "token_type",
          "kind"
        ],
        "properties": {
          "exp": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "iat": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "kind": {
            "$ref": "#/components/schemas/TokenClaimKind"
          },
          "token_type": {
            "$ref": "#/components/schemas/TokenType"
          }
        }
      },
      "TokenPair": {
        "type": "object",
        "required": [
          "access_token",
          "refresh_token"
        ],
        "properties": {
          "access_token": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          }
        }
      },
      "TokenType": {
        "type": "string",
        "enum": [
          "access",
          "refresh"
        ]
      },
      "UnlockModel": {
        "type": "object",
        "required": [
          "created_at",
          "updated_at",
          "player_id",
          "hint_id"
        ],
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "hint_id": {
            "type": "string",
            "format": "uuid"
          },
          "player_id": {
            "type": "string",
            "format": "uuid"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UnlockStatus": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "kind"
            ],
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "locked"
                ]
              }
            }
          },
          {
            "type": "object",
            "required": [
              "value",
              "kind"
            ],
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "unlocked"
                ]
              },
              "value": {
                "type": "string"
              }
            }
          }
        ]
      },
      "UpdateProfileSchema": {
        "type": "object",
        "required": [
          "display_name",
          "team_id"
        ],
        "properties": {
          "discord_id": {
            "type": [
              "string",
              "null"
            ]
          },
          "display_name": {
            "type": "string"
          },
          "team_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "UserModel": {
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "username",
          "email",
          "group"
        ],
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string"
          },
          "group": {
            "$ref": "#/components/schemas/GroupEnum"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "VerifyFlagSchema": {
        "type": "object",
        "required": [
          "challenge_id",
          "flag"
        ],
        "properties": {
          "challenge_id": {
            "type": "string",
            "format": "uuid"
          },
          "flag": {
            "type": "string"
          }
        }
      },
      "VerifyInviteSchema": {
        "type": "object",
        "required": [
          "team_name",
          "invite_id"
        ],
        "properties": {
          "invite_id": {
            "type": "string",
            "format": "uuid"
          },
          "team_name": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "Bearer"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}