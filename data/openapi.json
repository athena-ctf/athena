{
  "openapi": "3.0.3",
  "info": {
    "title": "Athena CTF",
    "description": "# Oxide\n\nOxide is the api server of [Athena CTF](https://github.com/athena-ctf/athena-ctf) platform.\n\n## Usage\n\n```\noxide run /data/config.toml\n```\n",
    "contact": {
      "name": "AthenaCTF Team",
      "email": "athena.help@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://www.mit.edu/~amini/LICENSE.md"
    },
    "version": "0.1.0"
  },
  "paths": {
    "/achievement": {
      "get": {
        "tags": ["achievement"],
        "summary": "List achievements",
        "operationId": "list",
        "responses": {
          "200": {
            "description": "Listed achievements successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AchievementModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["achievement"],
        "summary": "Create achievement",
        "operationId": "create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AchievementDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created achievement successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AchievementModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/achievement/{id}": {
      "delete": {
        "tags": ["achievement"],
        "summary": "Delete achievement by id",
        "operationId": "delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted achievement by id successfully"
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No achievement found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["achievement"],
        "summary": "Update achievement by id",
        "operationId": "update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AchievementDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated achievement by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AchievementModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters/request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No achievement found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/achievement/{id}/challenge": {
      "get": {
        "tags": ["achievement"],
        "summary": "List achievement challenge by id",
        "operationId": "retrieve_challenge",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved achievement challenge by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChallengeModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No achievement found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/achievement/{id}/player": {
      "get": {
        "tags": ["achievement"],
        "summary": "List achievement player by id",
        "operationId": "retrieve_player",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved achievement player by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlayerModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No achievement found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/achievement/{id}/team": {
      "get": {
        "tags": ["achievement"],
        "summary": "List achievement team by id",
        "operationId": "retrieve_team",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved achievement team by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No achievement found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/achivement/{id}": {
      "get": {
        "tags": ["achievement"],
        "summary": "Retrieve achievement by id",
        "operationId": "retrieve",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved achievement by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AchievementModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No achievement found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "tags": ["auth"],
        "summary": "Return currently authenticated user",
        "operationId": "get_me",
        "responses": {
          "200": {
            "description": "Password reset email sent successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": ["auth::register"],
        "summary": "Register user",
        "operationId": "action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterPlayer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Password reset email sent successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        },
        "security": [{}]
      }
    },
    "/auth/register/send-token": {
      "post": {
        "tags": ["auth::register"],
        "summary": "Send verification token to email",
        "operationId": "send_token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendTokenSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Token sent successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        },
        "security": [{}]
      }
    },
    "/auth/reset-password": {
      "post": {
        "tags": ["auth::reset_password"],
        "summary": "Auth reset password",
        "operationId": "action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Password reset email sent successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        },
        "security": [{}]
      }
    },
    "/auth/reset-password/send-token": {
      "post": {
        "tags": ["auth::reset_password"],
        "summary": "Send reset token to email",
        "operationId": "send_token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendTokenSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Token sent successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        },
        "security": [{}]
      }
    },
    "/auth/token": {
      "post": {
        "tags": ["auth::token"],
        "summary": "Create auth token",
        "operationId": "create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "user logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenPair"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        },
        "security": [{}]
      }
    },
    "/auth/token/refresh": {
      "post": {
        "tags": ["auth::token"],
        "summary": "Refresh auth token",
        "operationId": "refresh",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenPair"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "user logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenPair"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/ban": {
      "get": {
        "tags": ["ban"],
        "summary": "List bans",
        "operationId": "list",
        "responses": {
          "200": {
            "description": "Listed bans successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BanModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["ban"],
        "summary": "Create ban",
        "operationId": "create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BanDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created ban successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BanModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "BanModel ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/ban/player/{id}": {
      "post": {
        "tags": ["ban"],
        "summary": "Ban player by id",
        "operationId": "add_player_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BanDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Banned player by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BanModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No ban found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/ban/team/{id}": {
      "post": {
        "tags": ["ban"],
        "summary": "Ban team by id",
        "operationId": "add_team_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BanDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Banned team by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BanModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No ban found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/ban/{id}": {
      "get": {
        "tags": ["ban"],
        "summary": "Retrieve ban by id",
        "operationId": "retrieve_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved ban by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BanModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No ban found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["ban"],
        "summary": "Delete ban by id",
        "operationId": "delete_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted ban by id successfully"
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No ban found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["ban"],
        "summary": "Update ban by id",
        "operationId": "update_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BanDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated ban by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BanModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters/request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No ban found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/ban/{id}/player": {
      "get": {
        "tags": ["ban"],
        "summary": "Retrieve ban player by id",
        "operationId": "retrieve_player_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved ban player by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PlayerModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No ban found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/ban/{id}/team": {
      "get": {
        "tags": ["ban"],
        "summary": "Retrieve ban team by id",
        "operationId": "retrieve_team_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved ban team by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TeamModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No ban found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/challenge": {
      "get": {
        "tags": ["challenge"],
        "summary": "List challenges",
        "operationId": "list",
        "responses": {
          "200": {
            "description": "Listed challenges successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChallengeModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["challenge"],
        "summary": "Create challenge",
        "operationId": "create",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreateChallengeSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created challenge successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChallengeModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/challenge/{id}": {
      "get": {
        "tags": ["challenge"],
        "summary": "Retrieve challenge by id",
        "operationId": "retrieve_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved challenge by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChallengeModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No challenge found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["challenge"],
        "summary": "Delete challenge by id",
        "operationId": "delete_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted challenge by id successfully"
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No challenge found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["challenge"],
        "summary": "Update challenge by id",
        "operationId": "update_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChallengeDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated challenge by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChallengeModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters/request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No challenge found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/challenge/{id}/achievements": {
      "get": {
        "tags": ["challenge"],
        "summary": "List challenge achievements by id",
        "operationId": "list_achievements_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Listed challenge achievements by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AchievementModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No challenge found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/challenge/{id}/files": {
      "get": {
        "tags": ["challenge"],
        "summary": "List challenge files by id",
        "operationId": "list_files_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Listed challenge files by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FileModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No challenge found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/challenge/{id}/hints": {
      "get": {
        "tags": ["challenge"],
        "summary": "List challenge hints by id",
        "operationId": "list_hints_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Listed challenge hints by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HintModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No challenge found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/challenge/{id}/instances": {
      "get": {
        "tags": ["challenge"],
        "summary": "List challenge instances by id",
        "operationId": "list_instances_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Listed challenge instances by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InstanceModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No challenge found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/challenge/{id}/relations": {
      "get": {
        "tags": ["challenge"],
        "summary": "Retrieve challenge relations by id",
        "operationId": "retrieve_relations_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved challenge relations by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChallengeRelations"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No challenge found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/challenge/{id}/solves": {
      "get": {
        "tags": ["challenge"],
        "summary": "Calculate challenge solves by id",
        "operationId": "calculate_solves_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Calculates challenge solves by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChallengeSolves"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No challenge found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/challenge/{id}/tags": {
      "get": {
        "tags": ["challenge"],
        "summary": "List challenge tags by id",
        "operationId": "list_tags_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Listed challenge tags by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TagModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No challenge found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/file": {
      "get": {
        "tags": ["file"],
        "summary": "List files",
        "operationId": "list",
        "responses": {
          "200": {
            "description": "Listed files successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FileModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["file"],
        "summary": "Create file",
        "operationId": "create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FileDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created file successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/file/upload": {
      "post": {
        "tags": ["file"],
        "summary": "Upload files",
        "operationId": "upload",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UploadedFile"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Uploaded file successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid file upload",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/file/{id}": {
      "get": {
        "tags": ["file"],
        "summary": "Retrieve file by id",
        "operationId": "retrieve_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved file by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No file found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["file"],
        "summary": "Delete file by id",
        "operationId": "delete_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted file by id successfully"
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No file found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["file"],
        "summary": "Update file by id",
        "operationId": "update_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FileDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated file by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters/request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No file found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/file/{id}/challenge": {
      "get": {
        "tags": ["file"],
        "summary": "Retrieve file challenge by id",
        "operationId": "retrieve_challenge_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved file challenge by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChallengeModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No file found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "413": {
            "description": "File size is too large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/flag": {
      "get": {
        "tags": ["flag"],
        "summary": "List flags",
        "operationId": "list",
        "responses": {
          "200": {
            "description": "Listed flags successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FlagModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["flag"],
        "summary": "Create flag",
        "operationId": "create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlagDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created flag successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlagModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/flag/verify": {
      "post": {
        "tags": ["flag"],
        "summary": "Verify flag",
        "operationId": "verify",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyFlagSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Verified flag successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlagVerificationResult"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/flag/{id}": {
      "get": {
        "tags": ["flag"],
        "summary": "Retrieve flag by id",
        "operationId": "retrieve_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved flag by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlagModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No flag found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["flag"],
        "summary": "Delete flag by id",
        "operationId": "delete_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted flag by id successfully"
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No flag found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["flag"],
        "summary": "Update flag by id",
        "operationId": "update_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlagDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated flag by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlagModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters/request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No flag found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/flag/{id}/challenge": {
      "get": {
        "tags": ["flag"],
        "summary": "Retrieve flag challenge by id",
        "operationId": "retrieve_challenge_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved flag challenge by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChallengeModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No flag found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/flag/{id}/player": {
      "get": {
        "tags": ["flag"],
        "summary": "Retrieve flag player by id",
        "operationId": "retrieve_player_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved flag player by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PlayerModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No flag found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/hint": {
      "get": {
        "tags": ["hint"],
        "summary": "List hints",
        "operationId": "list",
        "responses": {
          "200": {
            "description": "Listed hints successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HintModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["hint"],
        "summary": "Create hint",
        "operationId": "create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HintDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created hint successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HintModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "HintModel ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/hint/{id}": {
      "get": {
        "tags": ["hint"],
        "summary": "Retrieve hint by id",
        "operationId": "retrieve_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved hint by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HintModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No hint found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["hint"],
        "summary": "Delete hint by id",
        "operationId": "delete_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted hint by id successfully"
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No hint found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["hint"],
        "summary": "Update hint by id",
        "operationId": "update_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HintDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated hint by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HintModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters/request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No hint found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/hint/{id}/challenge": {
      "get": {
        "tags": ["hint"],
        "summary": "Retrieve hint challenge by id",
        "operationId": "retrieve_challenge_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved hint challenge by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChallengeModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No hint found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/instance": {
      "get": {
        "tags": ["instance"],
        "summary": "List instances",
        "operationId": "list",
        "responses": {
          "200": {
            "description": "Listed instances successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InstanceModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["instance"],
        "summary": "Create instance",
        "operationId": "create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstanceDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created instance successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "InstanceModel ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/instance/{id}": {
      "get": {
        "tags": ["instance"],
        "summary": "Retrieve instance by id",
        "operationId": "retrieve",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved instance by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No instance found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["instance"],
        "summary": "Delete instance by id",
        "operationId": "delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted instance by id successfully"
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No instance found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["instance"],
        "summary": "Update instance by id",
        "operationId": "update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstanceDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated instance by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters/request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No instance found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/instance/{id}/challenge": {
      "get": {
        "tags": ["instance"],
        "summary": "Retrieve instance challenge by id",
        "operationId": "retrieve_challenge",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved instance challenge by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChallengeModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No instance found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/instance/{id}/player": {
      "get": {
        "tags": ["instance"],
        "summary": "Retrieve instance player by id",
        "operationId": "retrieve_player",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved instance user by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No instance found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/invite": {
      "get": {
        "tags": ["invite"],
        "summary": "List invites",
        "operationId": "list",
        "responses": {
          "200": {
            "description": "Listed invites successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InviteModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["invite"],
        "summary": "Create invite",
        "operationId": "create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InviteDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created invite successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InviteModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/invite/{id}": {
      "get": {
        "tags": ["invite"],
        "summary": "Retrieve invite by id",
        "operationId": "retrieve",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved invite by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InviteModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No invite found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["invite"],
        "summary": "Delete invite by id",
        "operationId": "delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted invite by id successfully"
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No invite found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["invite"],
        "summary": "Update invite by id",
        "operationId": "update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InviteDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated invite by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InviteModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters/request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No invite found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/invite/{id}/join": {
      "get": {
        "tags": ["invite"],
        "summary": "Join invite team by id",
        "operationId": "join_team",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Joined invite team by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format"
          },
          "401": {
            "description": "Action is permissible after login"
          },
          "403": {
            "description": "User does not have sufficient permissions"
          },
          "404": {
            "description": "No invite found with specified id"
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/invite/{id}/team": {
      "get": {
        "tags": ["invite"],
        "summary": "Retrieve invite team by id",
        "operationId": "retrieve_team",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved invite team by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No invite found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/notification": {
      "get": {
        "tags": ["notification"],
        "summary": "List notifications",
        "operationId": "list",
        "responses": {
          "200": {
            "description": "Listed notifications successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["notification"],
        "summary": "Create notification",
        "operationId": "create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created notification successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "NotificationModel ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/notification/{id}": {
      "get": {
        "tags": ["notification"],
        "summary": "Retrieve notification by id",
        "operationId": "retrieve_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved notification by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No notification found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["notification"],
        "summary": "Delete notification by id",
        "operationId": "delete_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted notification by id successfully"
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No notification found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["notification"],
        "summary": "Update notification by id",
        "operationId": "update_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated notification by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters/request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No notification found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/notification/{id}/player": {
      "get": {
        "tags": ["notification"],
        "summary": "Retrieve notification player by id",
        "operationId": "retrieve_player_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved notification player by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No notification found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/player": {
      "get": {
        "tags": ["player"],
        "summary": "List players",
        "operationId": "list",
        "responses": {
          "200": {
            "description": "Listed players successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlayerModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["player"],
        "summary": "Create player",
        "operationId": "create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created player successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/player/join/{team_name}": {
      "get": {
        "tags": ["player"],
        "summary": "Join team by team name",
        "operationId": "join_team_by_team_name",
        "parameters": [
          {
            "name": "team_name",
            "in": "path",
            "description": "Name of team to join",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Joined team by team name",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No user found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/player/rankings": {
      "get": {
        "tags": ["player"],
        "summary": "Calculate player rankings",
        "operationId": "calculate_rankings",
        "responses": {
          "200": {
            "description": "Listed player rankings",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerRankings"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No user found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/player/{id}": {
      "get": {
        "tags": ["player"],
        "summary": "Retrieve player by id",
        "operationId": "retrieve_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved player by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No player found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["player"],
        "summary": "Delete player by id",
        "operationId": "delete_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted player by id successfully"
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No player found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["player"],
        "summary": "Update player by id",
        "operationId": "update_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated player by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters/request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No player found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/player/{id}/achievements": {
      "get": {
        "tags": ["player"],
        "summary": "List player achievements by id",
        "operationId": "list_achievements_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Listed player achievements by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AchievementModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No player found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/player/{id}/flags": {
      "get": {
        "tags": ["player"],
        "summary": "List player flags by id",
        "operationId": "list_flags_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Listed user flags by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FlagModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No user found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/player/{id}/instance": {
      "get": {
        "tags": ["player"],
        "summary": "Retrieve player instance by id",
        "operationId": "retrieve_instance_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved user instance by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/InstanceModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No user found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/player/{id}/points": {
      "get": {
        "tags": ["player"],
        "summary": "List player points by id",
        "operationId": "calculate_points_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved player points by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Points"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No player found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/player/{id}/submissions": {
      "get": {
        "tags": ["player"],
        "summary": "List player submissions by id",
        "operationId": "list_submissions_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Listed player submissions by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubmissionModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No user found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/player/{id}/team": {
      "get": {
        "tags": ["player"],
        "summary": "Retrieve player team by id",
        "operationId": "retrieve_team_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved player team by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TeamModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No player found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/player/{id}/update-profile": {
      "patch": {
        "tags": ["player"],
        "summary": "Update player profile by id",
        "operationId": "update_profile_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfileSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated player profile by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters/request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No player found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/player/{username}/profile": {
      "get": {
        "tags": ["player"],
        "summary": "Retrieve player profile by username",
        "operationId": "retrieve_profile_by_username",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Username of user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved player profile by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerProfile"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No player found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/stats": {
      "get": {
        "tags": ["stats"],
        "summary": "Get stats of all tables",
        "operationId": "get",
        "responses": {
          "200": {
            "description": "Got stats successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatSchema"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/submission": {
      "get": {
        "tags": ["submission"],
        "summary": "List submissions",
        "operationId": "list",
        "responses": {
          "200": {
            "description": "Listed submissions successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubmissionModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid id format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["submission"],
        "summary": "Create submission",
        "operationId": "create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmissionDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created submission successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/submission/{id}": {
      "get": {
        "tags": ["submission"],
        "summary": "Retrieve submission by id",
        "operationId": "retrieve_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved submission by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No submission found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["submission"],
        "summary": "Delete submission by id",
        "operationId": "delete_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted submission by id successfully"
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No submission found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["submission"],
        "summary": "Update submission by id",
        "operationId": "update_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmissionDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated submission by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters/request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No submission found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/submission/{id}/player": {
      "get": {
        "tags": ["submission"],
        "summary": "Retrieve submission player by id",
        "operationId": "retrieve_player_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved submission player by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No submission found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/tag": {
      "get": {
        "tags": ["tag"],
        "summary": "List tags",
        "operationId": "list",
        "responses": {
          "200": {
            "description": "Listed tags successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TagModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["tag"],
        "summary": "Create tag",
        "operationId": "create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created tag successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/tag/{id}": {
      "get": {
        "tags": ["tag"],
        "summary": "Retrieve tag by id",
        "operationId": "retrieve_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved tag by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No tag found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["tag"],
        "summary": "Delete tag by id",
        "operationId": "delete_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted tag by id successfully"
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No tag found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["tag"],
        "summary": "Update tag by id",
        "operationId": "update_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated tag by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters/request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No tag found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/tag/{id}/challenges": {
      "get": {
        "tags": ["tag"],
        "summary": "List tag challenges by id",
        "operationId": "list_challenges_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Listed tag challenges by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChallengeModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No tag found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/team": {
      "get": {
        "tags": ["team"],
        "summary": "List teams",
        "operationId": "list",
        "responses": {
          "200": {
            "description": "Listed teams successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["team"],
        "summary": "Create team",
        "operationId": "create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created team successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/team/points": {
      "get": {
        "tags": ["team"],
        "summary": "List team points",
        "operationId": "list_points",
        "responses": {
          "200": {
            "description": "Listed team points by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamPoints"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No team found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/team/{id}": {
      "get": {
        "tags": ["team"],
        "summary": "Retrieve team by id",
        "operationId": "retrieve_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved team by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No team found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["team"],
        "summary": "Delete team by id",
        "operationId": "delete_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted team by id successfully"
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No team found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["team"],
        "summary": "Update team by id",
        "operationId": "update_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated team by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters/request body format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No team found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/team/{id}/achievements": {
      "get": {
        "tags": ["team"],
        "summary": "List team achievements by id",
        "operationId": "list_achievements_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Listed team achievements by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AchievementModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No team found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/team/{id}/invites": {
      "get": {
        "tags": ["team"],
        "summary": "List team invites by id",
        "operationId": "list_invites_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Listed team invites by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InviteModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No team found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/team/{id}/players": {
      "get": {
        "tags": ["team"],
        "summary": "List team players by id",
        "operationId": "list_players_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Listed team players by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No team found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/team/{id}/points": {
      "get": {
        "tags": ["team"],
        "summary": "Calculate team points by id",
        "operationId": "calculate_points_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Calculated team points by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamPoints"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Action is permissible after login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "User does not have sufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "No team found with specified id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AchievementDetails": {
        "type": "object",
        "required": ["value", "challenge_id", "prize"],
        "properties": {
          "challenge_id": {
            "type": "string",
            "format": "uuid"
          },
          "player_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "prize": {
            "type": "integer",
            "format": "int32"
          },
          "team_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "value": {
            "type": "string"
          }
        }
      },
      "AchievementModel": {
        "type": "object",
        "required": ["id", "value", "date_created", "prize", "challenge_id"],
        "properties": {
          "challenge_id": {
            "type": "string",
            "format": "uuid"
          },
          "date_created": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "player_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "prize": {
            "type": "integer",
            "format": "int32"
          },
          "team_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "value": {
            "type": "string"
          }
        }
      },
      "BackendEnum": {
        "type": "string",
        "enum": ["awss3", "staticserver"]
      },
      "BanDetails": {
        "type": "object",
        "required": ["reason", "duration"],
        "properties": {
          "duration": {
            "type": "integer",
            "format": "int32"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "BanModel": {
        "type": "object",
        "required": ["id", "date_created", "reason", "duration"],
        "properties": {
          "date_created": {
            "type": "string",
            "format": "date-time"
          },
          "duration": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "ChallengeDetails": {
        "type": "object",
        "required": [
          "author_name",
          "description",
          "difficulty",
          "max_points",
          "min_points",
          "status",
          "flag_type",
          "title"
        ],
        "properties": {
          "author_name": {
            "type": "string"
          },
          "container_details": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContainerMeta"
              }
            ],
            "nullable": true
          },
          "description": {
            "type": "string"
          },
          "difficulty": {
            "$ref": "#/components/schemas/DifficultyEnum"
          },
          "flag_type": {
            "$ref": "#/components/schemas/FlagTypeEnum"
          },
          "max_points": {
            "type": "integer",
            "format": "int32"
          },
          "min_points": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/ChallengeStatusEnum"
          },
          "title": {
            "type": "string"
          }
        }
      },
      "ChallengeHint": {
        "type": "object",
        "required": ["id", "cost"],
        "properties": {
          "cost": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "ChallengeModel": {
        "type": "object",
        "required": [
          "id",
          "title",
          "description",
          "min_points",
          "max_points",
          "points",
          "difficulty",
          "flag_type",
          "status",
          "author_name"
        ],
        "properties": {
          "author_name": {
            "type": "string"
          },
          "container_details": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContainerMeta"
              }
            ],
            "nullable": true
          },
          "description": {
            "type": "string"
          },
          "difficulty": {
            "$ref": "#/components/schemas/DifficultyEnum"
          },
          "flag_type": {
            "$ref": "#/components/schemas/FlagTypeEnum"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "max_points": {
            "type": "integer",
            "format": "int32"
          },
          "min_points": {
            "type": "integer",
            "format": "int32"
          },
          "points": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/ChallengeStatusEnum"
          },
          "title": {
            "type": "string"
          }
        }
      },
      "ChallengeRelations": {
        "type": "object",
        "required": ["challenge", "files", "hints", "tags", "solves"],
        "properties": {
          "challenge": {
            "$ref": "#/components/schemas/ChallengeModel"
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileModel"
            }
          },
          "hints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChallengeHint"
            }
          },
          "solves": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagModel"
            }
          }
        }
      },
      "ChallengeSolves": {
        "type": "object",
        "required": ["solves"],
        "properties": {
          "solves": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          }
        }
      },
      "ChallengeStatusEnum": {
        "type": "string",
        "enum": ["active", "maintenance", "scheduled"]
      },
      "ContainerMeta": {
        "type": "object",
        "required": ["compose", "single_instance"],
        "properties": {
          "compose": {
            "$ref": "#/components/schemas/StrippedCompose"
          },
          "single_instance": {
            "type": "boolean"
          }
        }
      },
      "CreateChallengeSchema": {
        "type": "object",
        "required": [
          "container_details",
          "author_name",
          "description",
          "difficulty",
          "max_points",
          "min_points",
          "status",
          "title",
          "tags",
          "flag_type"
        ],
        "properties": {
          "author_name": {
            "type": "string"
          },
          "container_details": {
            "type": "string",
            "format": "binary"
          },
          "description": {
            "type": "string"
          },
          "difficulty": {
            "$ref": "#/components/schemas/DifficultyEnum"
          },
          "flag_type": {
            "$ref": "#/components/schemas/FlagTypeEnum"
          },
          "max_points": {
            "type": "integer",
            "format": "int32"
          },
          "min_points": {
            "type": "integer",
            "format": "int32"
          },
          "single_instance": {
            "type": "boolean",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/ChallengeStatusEnum"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "title": {
            "type": "string"
          }
        }
      },
      "DifficultyEnum": {
        "type": "string",
        "enum": ["easy", "extreme", "hard", "medium"]
      },
      "ErrorModel": {
        "type": "object",
        "required": ["message"],
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "FileDetails": {
        "type": "object",
        "required": ["backend", "mime", "sha1_hash", "name", "challenge_id"],
        "properties": {
          "backend": {
            "$ref": "#/components/schemas/BackendEnum"
          },
          "challenge_id": {
            "type": "string",
            "format": "uuid"
          },
          "mime": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "sha1_hash": {
            "type": "string"
          }
        }
      },
      "FileModel": {
        "type": "object",
        "required": [
          "id",
          "name",
          "backend",
          "mime",
          "sha1_hash",
          "challenge_id"
        ],
        "properties": {
          "backend": {
            "$ref": "#/components/schemas/BackendEnum"
          },
          "challenge_id": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "mime": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "sha1_hash": {
            "type": "string"
          }
        }
      },
      "FlagDetails": {
        "type": "object",
        "required": ["challenge_id", "value"],
        "properties": {
          "challenge_id": {
            "type": "string",
            "format": "uuid"
          },
          "player_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "value": {
            "type": "string"
          }
        }
      },
      "FlagModel": {
        "type": "object",
        "required": ["id", "value", "challenge_id"],
        "properties": {
          "challenge_id": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "player_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "value": {
            "type": "string"
          }
        }
      },
      "FlagTypeEnum": {
        "type": "string",
        "enum": ["peruser", "regex", "static"]
      },
      "FlagVerificationResult": {
        "type": "object",
        "required": ["result"],
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ResultEnum"
          }
        }
      },
      "HintDetails": {
        "type": "object",
        "required": ["challenge_id", "cost", "description"],
        "properties": {
          "challenge_id": {
            "type": "string",
            "format": "uuid"
          },
          "cost": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "HintModel": {
        "type": "object",
        "required": ["id", "description", "cost", "challenge_id"],
        "properties": {
          "challenge_id": {
            "type": "string",
            "format": "uuid"
          },
          "cost": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "InstanceDetails": {
        "type": "object",
        "required": ["challenge_id", "player_id"],
        "properties": {
          "challenge_id": {
            "type": "string",
            "format": "uuid"
          },
          "player_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "InstanceModel": {
        "type": "object",
        "required": [
          "id",
          "date_created",
          "container_id",
          "container_port",
          "expiry",
          "challenge_id",
          "player_id"
        ],
        "properties": {
          "challenge_id": {
            "type": "string",
            "format": "uuid"
          },
          "container_id": {
            "type": "string"
          },
          "container_port": {
            "type": "integer",
            "format": "int64"
          },
          "date_created": {
            "type": "string",
            "format": "date-time"
          },
          "expiry": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "player_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "InviteDetails": {
        "type": "object",
        "required": ["remaining", "team_id", "usages"],
        "properties": {
          "remaining": {
            "type": "integer",
            "format": "int32"
          },
          "team_id": {
            "type": "string",
            "format": "uuid"
          },
          "usages": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "InviteModel": {
        "type": "object",
        "required": ["id", "usages", "remaining", "team_id"],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "remaining": {
            "type": "integer",
            "format": "int32"
          },
          "team_id": {
            "type": "string",
            "format": "uuid"
          },
          "usages": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "JsonResponse": {
        "type": "object",
        "required": ["message"],
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "LoginModel": {
        "type": "object",
        "required": ["username", "password"],
        "properties": {
          "password": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "NotificationDetails": {
        "type": "object",
        "required": ["content", "title", "player_id"],
        "properties": {
          "content": {
            "type": "string"
          },
          "player_id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string"
          }
        }
      },
      "NotificationModel": {
        "type": "object",
        "required": ["id", "title", "content", "date", "player_id"],
        "properties": {
          "content": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "player_id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string"
          }
        }
      },
      "PlayerDetails": {
        "type": "object",
        "required": [
          "username",
          "email",
          "password",
          "display_name",
          "verified"
        ],
        "properties": {
          "ban_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "discord_id": {
            "type": "string",
            "nullable": true
          },
          "display_name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "team_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "username": {
            "type": "string"
          },
          "verified": {
            "type": "boolean"
          }
        }
      },
      "PlayerModel": {
        "type": "object",
        "required": [
          "id",
          "date_created",
          "username",
          "email",
          "display_name",
          "verified"
        ],
        "properties": {
          "ban_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "date_created": {
            "type": "string",
            "format": "date-time"
          },
          "discord_id": {
            "type": "string",
            "nullable": true
          },
          "display_name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "team_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "username": {
            "type": "string"
          },
          "verified": {
            "type": "boolean"
          }
        }
      },
      "PlayerPoints": {
        "type": "object",
        "required": ["player", "points"],
        "properties": {
          "player": {
            "$ref": "#/components/schemas/PlayerModel"
          },
          "points": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PlayerProfile": {
        "type": "object",
        "required": ["player", "solved_challenges", "tag_solves"],
        "properties": {
          "player": {
            "$ref": "#/components/schemas/PlayerModel"
          },
          "solved_challenges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChallengeModel"
            }
          },
          "tag_solves": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagSolves"
            }
          }
        }
      },
      "PlayerRankings": {
        "type": "object",
        "required": [
          "rank1",
          "rank2",
          "rank3",
          "rank4",
          "rank5",
          "rank6",
          "rank7",
          "rank8",
          "rank9",
          "rank10"
        ],
        "properties": {
          "rank1": {
            "$ref": "#/components/schemas/Points"
          },
          "rank10": {
            "$ref": "#/components/schemas/Points"
          },
          "rank2": {
            "$ref": "#/components/schemas/Points"
          },
          "rank3": {
            "$ref": "#/components/schemas/Points"
          },
          "rank4": {
            "$ref": "#/components/schemas/Points"
          },
          "rank5": {
            "$ref": "#/components/schemas/Points"
          },
          "rank6": {
            "$ref": "#/components/schemas/Points"
          },
          "rank7": {
            "$ref": "#/components/schemas/Points"
          },
          "rank8": {
            "$ref": "#/components/schemas/Points"
          },
          "rank9": {
            "$ref": "#/components/schemas/Points"
          }
        }
      },
      "RegisterPlayer": {
        "type": "object",
        "required": ["display_name", "email", "username", "password", "token"],
        "properties": {
          "display_name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "ResetPasswordSchema": {
        "type": "object",
        "required": ["token", "email", "new_password"],
        "properties": {
          "email": {
            "type": "string"
          },
          "new_password": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        }
      },
      "ResultEnum": {
        "type": "string",
        "enum": ["fail", "pass"]
      },
      "RoleEnum": {
        "type": "string",
        "enum": ["admin", "moderator", "judge", "editor", "analyst"]
      },
      "SendTokenSchema": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "StatSchema": {
        "type": "object",
        "required": [
          "achievement",
          "ban",
          "challenge",
          "file",
          "flag",
          "hint",
          "instance",
          "invite",
          "notification",
          "player",
          "submission",
          "tag",
          "team",
          "unlocks"
        ],
        "properties": {
          "achievement": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "ban": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "challenge": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "file": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "flag": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "hint": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "instance": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "invite": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "notification": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "player": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "submission": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "tag": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "team": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "unlocks": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          }
        }
      },
      "SubmissionDetails": {
        "type": "object",
        "required": ["flag", "player_id", "challenge_id", "result"],
        "properties": {
          "challenge_id": {
            "type": "string",
            "format": "uuid"
          },
          "flag": {
            "type": "string"
          },
          "player_id": {
            "type": "string",
            "format": "uuid"
          },
          "result": {
            "$ref": "#/components/schemas/ResultEnum"
          }
        }
      },
      "SubmissionModel": {
        "type": "object",
        "required": [
          "id",
          "flag",
          "result",
          "date_created",
          "player_id",
          "challenge_id"
        ],
        "properties": {
          "challenge_id": {
            "type": "string",
            "format": "uuid"
          },
          "date_created": {
            "type": "string",
            "format": "date-time"
          },
          "flag": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "player_id": {
            "type": "string",
            "format": "uuid"
          },
          "result": {
            "$ref": "#/components/schemas/ResultEnum"
          }
        }
      },
      "TagDetails": {
        "type": "object",
        "required": ["value"],
        "properties": {
          "value": {
            "type": "string"
          }
        }
      },
      "TagModel": {
        "type": "object",
        "required": ["id", "value"],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "TagSolves": {
        "type": "object",
        "required": ["tag_id", "tag_value", "solves"],
        "properties": {
          "solves": {
            "type": "integer",
            "minimum": 0
          },
          "tag_id": {
            "type": "string",
            "format": "uuid"
          },
          "tag_value": {
            "type": "string"
          }
        }
      },
      "TeamDetails": {
        "type": "object",
        "required": ["email", "name"],
        "properties": {
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "TeamModel": {
        "type": "object",
        "required": ["id", "date_created", "email", "name"],
        "properties": {
          "ban_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "date_created": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "TeamPoints": {
        "type": "object",
        "required": ["team", "players", "total"],
        "properties": {
          "players": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlayerPoints"
            }
          },
          "team": {
            "$ref": "#/components/schemas/TeamModel"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "TokenPair": {
        "type": "object",
        "required": ["access_token", "refresh_token"],
        "properties": {
          "access_token": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          }
        }
      },
      "UpdateProfileSchema": {
        "type": "object",
        "required": ["display_name", "team_id"],
        "properties": {
          "discord_id": {
            "type": "string",
            "nullable": true
          },
          "display_name": {
            "type": "string"
          },
          "team_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "UploadedFile": {
        "type": "object",
        "required": ["file", "challenge_id"],
        "properties": {
          "challenge_id": {
            "type": "string",
            "format": "uuid"
          },
          "file": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "VerifyFlagSchema": {
        "type": "object",
        "required": ["challenge_id", "flag"],
        "properties": {
          "challenge_id": {
            "type": "string",
            "format": "uuid"
          },
          "flag": {
            "type": "string"
          }
        }
      },
      "VerifySchema": {
        "type": "object",
        "required": ["token", "player_id"],
        "properties": {
          "player_id": {
            "type": "string",
            "format": "uuid"
          },
          "token": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "achievement",
      "description": "Routes regarding the achievement table"
    },
    {
      "name": "auth",
      "description": "Routes regarding authentication/authorization"
    },
    {
      "name": "ban",
      "description": "Routes regarding the ban table"
    },
    {
      "name": "challenge",
      "description": "Routes regarding the challenge table"
    },
    {
      "name": "file",
      "description": "Routes regarding the file table"
    },
    {
      "name": "flag",
      "description": "Routes regarding the flag table"
    },
    {
      "name": "hint",
      "description": "Routes regarding the hint table"
    },
    {
      "name": "instance",
      "description": "Routes regarding the instance table"
    },
    {
      "name": "invite",
      "description": "Routes regarding the invite table"
    },
    {
      "name": "notification",
      "description": "Routes regarding the notification table"
    },
    {
      "name": "player",
      "description": "Routes regarding the player table"
    },
    {
      "name": "submission",
      "description": "Routes regarding the submission table"
    },
    {
      "name": "tag",
      "description": "Routes regarding the tag table"
    },
    {
      "name": "team",
      "description": "Routes regarding the team table"
    },
    {
      "name": "user",
      "description": "Routes regarding the user table"
    }
  ]
}
