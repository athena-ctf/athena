name: "{{ ctf.name|slugify }}"
volumes:
    postgres_data:
    registry_data:
    redis_data:
    caddy_data:
        external: true
    caddy_config:
    emails:
    local_storage:
        external: true

networks:
    ctf_network:
        driver: bridge

services:
    postgres:
        restart: unless-stopped
        container_name: "postgres"
        image: postgres
        environment:
            POSTGRES_USER: "{{ database.username }}"
            POSTGRES_PASSWORD: "{{ database.password }}"
            POSTGRES_DB: "{{ ctf.name|slugify }}_db"
            PGDATA: /data/postgres
        volumes:
            - postgres_data:/data/postgres
        networks:
            - ctf_network

    redis:
        restart: unless-stopped
        container_name: "redis"
        image: redis
        command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
        volumes:
            - redis_data:/data/redis
            - ./conf/redis.conf:/usr/local/etc/redis/redis.conf
        networks:
            - ctf_network

    caddy:
        container_name: caddy
        build:
            dockerfile: dockerfiles/caddy.Dockerfile
            context: .
        restart: unless-stopped
        cap_add:
            - NET_ADMIN
        ports:
            - "80:80"
            - "443:443"
            - "443:443/udp"
        volumes:
            - ./conf/Caddyfile:/etc/caddy/Caddyfile
            - caddy_data:/data
            - caddy_config:/config
        networks:
            - ctf_network

    api:
        container_name: "{{ services.api_server_host }}"
        build:
            dockerfile: dockerfiles/api.Dockerfile
            context: .
            tags: ["athena-ctf/api"]
        restart: unless-stopped
        depends_on:
            - postgres
            - caddy
            - redis
        volumes:
            - emails:/api/emails
            - ./conf/config.json:/data/config.json
        networks:
            - ctf_network

    fileserver:
        container_name: fileserver
        build:
            dockerfile: dockerfiles/fileserver.Dockerfile
            context: .
            tags: ["athena-ctf/fileserver"]
        restart: unless-stopped
        volumes:
            - ./conf/config.json:/data/config.json
        networks:
            - ctf_network

    web:
        container_name: web
        build:
            dockerfile: dockerfiles/web.Dockerfile
            context: .
            tags: ["athena-ctf/web"]
        restart: unless-stopped
        depends_on:
            - api
        networks:
            - ctf_network

    admin:
        container_name: admin
        build:
            dockerfile: dockerfiles/admin.Dockerfile
            context: .
            tags: ["athena-ctf/admin"]
        restart: unless-stopped
        depends_on:
            - api
        networks:
            - ctf_network

    stalwart-mail:
        image: stalwartlabs/mail-server:latest
        container_name: stalwart-mail
        restart: unless-stopped
        ports:
            - "8081:8080"
        volumes:
            - ./config/stalwart-mail:/opt/stalwart-mail/etc
        networks:
            - ctf_network

    registry:
        image: registry:2
        container_name: registry
        restart: unless-stopped
        ports:
            - "5001:5000"
        environment:
            REGISTRY_AUTH: htpasswd
            REGISTRY_AUTH_HTPASSWD_REALM: Registry-Realm
            REGISTRY_AUTH_HTPASSWD_PATH: /auth/registry.passwd
            REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /data
        volumes:
            - registry_data:/data
            - ./auth:/auth
        networks:
            - ctf_network

    bot:
        container_name: bot
        build:
            dockerfile: dockerfiles/bot.Dockerfile
            context: .
            tags: ["athena-ctf/bot"]
        restart: unless-stopped
        volumes:
            - discord_bot_data:/bot/data
            - ./conf/config.json:/data/config.json
        depends_on:
            - redis
            - postgres
        networks:
            - ctf_network
